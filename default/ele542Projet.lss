
ele542Projet.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  000010c4  00001158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008000ba  008000ba  000011b2  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  000011b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000019d  00000000  00000000  000011f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000486  00000000  00000000  0000138f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b9  00000000  00000000  00001815  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000046e  00000000  00000000  000019ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000100  00000000  00000000  00001e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000217  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
       8:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
       c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      34:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_13>
      38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      3c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__vector_15>
      40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>

00000054 <UART_pszEndOfLine>:
      54:	0d 0a 00                                            ...

00000057 <__c.1988>:
      57:	63 64 69 6e 6f 70 73 75 78 58 5b 00 00              cdinopsuxX[..

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d8 e0       	ldi	r29, 0x08	; 8
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e4 ec       	ldi	r30, 0xC4	; 196
      78:	f0 e1       	ldi	r31, 0x10	; 16
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	aa 3b       	cpi	r26, 0xBA	; 186
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>

00000086 <__do_clear_bss>:
      86:	10 e0       	ldi	r17, 0x00	; 0
      88:	aa eb       	ldi	r26, 0xBA	; 186
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
      8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
      90:	a5 3c       	cpi	r26, 0xC5	; 197
      92:	b1 07       	cpc	r27, r17
      94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
      96:	0e 94 51 00 	call	0xa2	; 0xa2 <main>
      9a:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <_exit>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <main>:
const u08 NORMAL_COMMAND = 0xF1;
const u08 FORCED_STOP	=	0xF0;


int main(void)
{
      a2:	df 93       	push	r29
      a4:	cf 93       	push	r28
      a6:	cd b7       	in	r28, 0x3d	; 61
      a8:	de b7       	in	r29, 0x3e	; 62
      aa:	a9 97       	sbiw	r28, 0x29	; 41
      ac:	0f b6       	in	r0, 0x3f	; 63
      ae:	f8 94       	cli
      b0:	de bf       	out	0x3e, r29	; 62
      b2:	0f be       	out	0x3f, r0	; 63
      b4:	cd bf       	out	0x3d, r28	; 61
    u08 data;
	u08 p_vitesse=0,vitesse=0;
      b6:	1e 82       	std	Y+6, r1	; 0x06
      b8:	1d 82       	std	Y+5, r1	; 0x05


	u08 p_angle=0,angle=0;
      ba:	1c 82       	std	Y+4, r1	; 0x04
      bc:	1b 82       	std	Y+3, r1	; 0x03
	short etat;
	etat = 0;
      be:	1a 82       	std	Y+2, r1	; 0x02
      c0:	19 82       	std	Y+1, r1	; 0x01
	
	char str[30];;
    /* Initialise UART */
    UART_Init();
      c2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <UART_Init>
	
	for (;;) { 
	printf("hhhhhhhhhhhhhhhhhhhhhhhhhhh"); /* loop forever */
      c6:	00 d0       	rcall	.+0      	; 0xc8 <main+0x26>
      c8:	ed b7       	in	r30, 0x3d	; 61
      ca:	fe b7       	in	r31, 0x3e	; 62
      cc:	31 96       	adiw	r30, 0x01	; 1
      ce:	82 e6       	ldi	r24, 0x62	; 98
      d0:	90 e0       	ldi	r25, 0x00	; 0
      d2:	91 83       	std	Z+1, r25	; 0x01
      d4:	80 83       	st	Z, r24
      d6:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <printf>
      da:	0f 90       	pop	r0
      dc:	0f 90       	pop	r0
	//sleep(1000);
		data = UART_ReceiveByte();
      de:	0e 94 57 01 	call	0x2ae	; 0x2ae <UART_ReceiveByte>
      e2:	8f 83       	std	Y+7, r24	; 0x07
				/*	send_debug(str,30);
					for( int j=29;j>=0;j--)
					{
						send_debugu08(str[j]);
					}*/
		switch(etat)
      e4:	89 81       	ldd	r24, Y+1	; 0x01
      e6:	9a 81       	ldd	r25, Y+2	; 0x02
      e8:	99 a7       	std	Y+41, r25	; 0x29
      ea:	88 a7       	std	Y+40, r24	; 0x28
      ec:	88 a5       	ldd	r24, Y+40	; 0x28
      ee:	99 a5       	ldd	r25, Y+41	; 0x29
      f0:	81 30       	cpi	r24, 0x01	; 1
      f2:	91 05       	cpc	r25, r1
      f4:	a1 f0       	breq	.+40     	; 0x11e <main+0x7c>
      f6:	88 a5       	ldd	r24, Y+40	; 0x28
      f8:	99 a5       	ldd	r25, Y+41	; 0x29
      fa:	82 30       	cpi	r24, 0x02	; 2
      fc:	91 05       	cpc	r25, r1
      fe:	09 f4       	brne	.+2      	; 0x102 <main+0x60>
     100:	45 c0       	rjmp	.+138    	; 0x18c <main+0xea>
     102:	88 a5       	ldd	r24, Y+40	; 0x28
     104:	99 a5       	ldd	r25, Y+41	; 0x29
     106:	00 97       	sbiw	r24, 0x00	; 0
     108:	f1 f6       	brne	.-68     	; 0xc6 <main+0x24>
		{
			case 0:
				if (data == NORMAL_COMMAND)
     10a:	90 91 60 00 	lds	r25, 0x0060
     10e:	8f 81       	ldd	r24, Y+7	; 0x07
     110:	89 17       	cp	r24, r25
     112:	c9 f6       	brne	.-78     	; 0xc6 <main+0x24>
				{
					//send_debug("debug: etat = 0: data: ", 17);
					//send_debugu08(data);
					etat = 1;
     114:	81 e0       	ldi	r24, 0x01	; 1
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	9a 83       	std	Y+2, r25	; 0x02
     11a:	89 83       	std	Y+1, r24	; 0x01
     11c:	d4 cf       	rjmp	.-88     	; 0xc6 <main+0x24>
				}
				break;
			case 1:

				vitesse = data;
     11e:	8f 81       	ldd	r24, Y+7	; 0x07
     120:	8d 83       	std	Y+5, r24	; 0x05
				if (vitesse != p_vitesse) {
     122:	9d 81       	ldd	r25, Y+5	; 0x05
     124:	8e 81       	ldd	r24, Y+6	; 0x06
     126:	98 17       	cp	r25, r24
     128:	61 f1       	breq	.+88     	; 0x182 <main+0xe0>
					UART_SendByte(vitesse);
     12a:	8d 81       	ldd	r24, Y+5	; 0x05
     12c:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
					
				
					send_debug(" debug: etat = 1; vitesse= ", 28);
     130:	8e e7       	ldi	r24, 0x7E	; 126
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	6c e1       	ldi	r22, 0x1C	; 28
     136:	70 e0       	ldi	r23, 0x00	; 0
     138:	0e 94 00 02 	call	0x400	; 0x400 <send_debug>
					
					int vit;
					scanf(vitesse, "%vit", &vit);
     13c:	8d 81       	ldd	r24, Y+5	; 0x05
     13e:	88 2f       	mov	r24, r24
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	00 d0       	rcall	.+0      	; 0x144 <main+0xa2>
     144:	00 d0       	rcall	.+0      	; 0x146 <main+0xa4>
     146:	00 d0       	rcall	.+0      	; 0x148 <main+0xa6>
     148:	ed b7       	in	r30, 0x3d	; 61
     14a:	fe b7       	in	r31, 0x3e	; 62
     14c:	31 96       	adiw	r30, 0x01	; 1
     14e:	91 83       	std	Z+1, r25	; 0x01
     150:	80 83       	st	Z, r24
     152:	8a e9       	ldi	r24, 0x9A	; 154
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	93 83       	std	Z+3, r25	; 0x03
     158:	82 83       	std	Z+2, r24	; 0x02
     15a:	ce 01       	movw	r24, r28
     15c:	86 96       	adiw	r24, 0x26	; 38
     15e:	95 83       	std	Z+5, r25	; 0x05
     160:	84 83       	std	Z+4, r24	; 0x04
     162:	0e 94 90 02 	call	0x520	; 0x520 <scanf>
     166:	8d b7       	in	r24, 0x3d	; 61
     168:	9e b7       	in	r25, 0x3e	; 62
     16a:	06 96       	adiw	r24, 0x06	; 6
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	9e bf       	out	0x3e, r25	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	8d bf       	out	0x3d, r24	; 61
					send_debugu08(vit);
     176:	8e a1       	ldd	r24, Y+38	; 0x26
     178:	9f a1       	ldd	r25, Y+39	; 0x27
     17a:	0e 94 48 02 	call	0x490	; 0x490 <send_debugu08>
					//send_debug_int(atoi(vitesse));
					
					p_vitesse = vitesse;
     17e:	8d 81       	ldd	r24, Y+5	; 0x05
     180:	8e 83       	std	Y+6, r24	; 0x06
				}
				etat = 2;
     182:	82 e0       	ldi	r24, 0x02	; 2
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	9a 83       	std	Y+2, r25	; 0x02
     188:	89 83       	std	Y+1, r24	; 0x01
     18a:	9d cf       	rjmp	.-198    	; 0xc6 <main+0x24>
				break;
			case 2:

				if(angle != p_angle)
     18c:	9b 81       	ldd	r25, Y+3	; 0x03
     18e:	8c 81       	ldd	r24, Y+4	; 0x04
     190:	98 17       	cp	r25, r24
     192:	91 f0       	breq	.+36     	; 0x1b8 <main+0x116>
				{
					angle = data;
     194:	8f 81       	ldd	r24, Y+7	; 0x07
     196:	8b 83       	std	Y+3, r24	; 0x03
					UART_SendByte(angle);
     198:	8b 81       	ldd	r24, Y+3	; 0x03
     19a:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
					send_debug(" debug: etat = 2; angle= ", 25);
     19e:	8f e9       	ldi	r24, 0x9F	; 159
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	69 e1       	ldi	r22, 0x19	; 25
     1a4:	70 e0       	ldi	r23, 0x00	; 0
     1a6:	0e 94 00 02 	call	0x400	; 0x400 <send_debug>
					send_debugu08(angle);
     1aa:	8b 81       	ldd	r24, Y+3	; 0x03
     1ac:	88 2f       	mov	r24, r24
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 48 02 	call	0x490	; 0x490 <send_debugu08>
					p_angle = angle;
     1b4:	8b 81       	ldd	r24, Y+3	; 0x03
     1b6:	8c 83       	std	Y+4, r24	; 0x04
				}
				etat = 0;
     1b8:	1a 82       	std	Y+2, r1	; 0x02
     1ba:	19 82       	std	Y+1, r1	; 0x01
     1bc:	84 cf       	rjmp	.-248    	; 0xc6 <main+0x24>

000001be <__vector_15>:
/* end-of-line string = 'Line End' + 'Line Feed' character */
prog_char UART_pszEndOfLine[3] = {0x0d,0x0a,0};

/* UART Transmit Complete Interrupt Function */
SIGNAL(SIG_UART_TRANS)      
{
     1be:	1f 92       	push	r1
     1c0:	0f 92       	push	r0
     1c2:	0f b6       	in	r0, 0x3f	; 63
     1c4:	0f 92       	push	r0
     1c6:	11 24       	eor	r1, r1
     1c8:	8f 93       	push	r24
     1ca:	9f 93       	push	r25
     1cc:	af 93       	push	r26
     1ce:	bf 93       	push	r27
     1d0:	ef 93       	push	r30
     1d2:	ff 93       	push	r31
     1d4:	df 93       	push	r29
     1d6:	cf 93       	push	r28
     1d8:	cd b7       	in	r28, 0x3d	; 61
     1da:	de b7       	in	r29, 0x3e	; 62
    /* Test if a string is being sent */
    if (pUART_Buffer!=0)
     1dc:	80 91 bc 00 	lds	r24, 0x00BC
     1e0:	90 91 bd 00 	lds	r25, 0x00BD
     1e4:	00 97       	sbiw	r24, 0x00	; 0
     1e6:	09 f1       	breq	.+66     	; 0x22a <__vector_15+0x6c>
    {
        /* Go to next character in string */
        pUART_Buffer++;
     1e8:	80 91 bc 00 	lds	r24, 0x00BC
     1ec:	90 91 bd 00 	lds	r25, 0x00BD
     1f0:	01 96       	adiw	r24, 0x01	; 1
     1f2:	90 93 bd 00 	sts	0x00BD, r25
     1f6:	80 93 bc 00 	sts	0x00BC, r24
        /* Test if the end of string has been reached */
        if (*pUART_Buffer==0)
     1fa:	e0 91 bc 00 	lds	r30, 0x00BC
     1fe:	f0 91 bd 00 	lds	r31, 0x00BD
     202:	80 81       	ld	r24, Z
     204:	88 23       	and	r24, r24
     206:	41 f4       	brne	.+16     	; 0x218 <__vector_15+0x5a>
        {
            /* String has been sent */
            pUART_Buffer = 0;
     208:	10 92 bd 00 	sts	0x00BD, r1
     20c:	10 92 bc 00 	sts	0x00BC, r1
            /* Indicate that the UART is now ready to send */
            UART_Ready   = 1;
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	80 93 bb 00 	sts	0x00BB, r24
     216:	0c c0       	rjmp	.+24     	; 0x230 <__vector_15+0x72>
            return;
        }
        /* Send next character in string */
        outp( *pUART_Buffer, UDR );
     218:	ec e2       	ldi	r30, 0x2C	; 44
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	a0 91 bc 00 	lds	r26, 0x00BC
     220:	b0 91 bd 00 	lds	r27, 0x00BD
     224:	8c 91       	ld	r24, X
     226:	80 83       	st	Z, r24
     228:	03 c0       	rjmp	.+6      	; 0x230 <__vector_15+0x72>
        return;
    }
    /* Indicate that the UART is now ready to send */
    UART_Ready = 1;
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	80 93 bb 00 	sts	0x00BB, r24
}
     230:	cf 91       	pop	r28
     232:	df 91       	pop	r29
     234:	ff 91       	pop	r31
     236:	ef 91       	pop	r30
     238:	bf 91       	pop	r27
     23a:	af 91       	pop	r26
     23c:	9f 91       	pop	r25
     23e:	8f 91       	pop	r24
     240:	0f 90       	pop	r0
     242:	0f be       	out	0x3f, r0	; 63
     244:	0f 90       	pop	r0
     246:	1f 90       	pop	r1
     248:	18 95       	reti

0000024a <__vector_13>:

/* UART Receive Complete Interrupt Function */
SIGNAL(SIG_UART_RECV)      
{
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	8f 93       	push	r24
     256:	ef 93       	push	r30
     258:	ff 93       	push	r31
     25a:	df 93       	push	r29
     25c:	cf 93       	push	r28
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
    /* Indicate that the UART has received a character */
    UART_ReceivedChar = 1;
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	80 93 ba 00 	sts	0x00BA, r24
    /* Store received character */
    UART_RxChar = inp(UDR);
     268:	ec e2       	ldi	r30, 0x2C	; 44
     26a:	f0 e0       	ldi	r31, 0x00	; 0
     26c:	80 81       	ld	r24, Z
     26e:	80 93 be 00 	sts	0x00BE, r24
}
     272:	cf 91       	pop	r28
     274:	df 91       	pop	r29
     276:	ff 91       	pop	r31
     278:	ef 91       	pop	r30
     27a:	8f 91       	pop	r24
     27c:	0f 90       	pop	r0
     27e:	0f be       	out	0x3f, r0	; 63
     280:	0f 90       	pop	r0
     282:	1f 90       	pop	r1
     284:	18 95       	reti

00000286 <UART_SendByte>:

void UART_SendByte(u08 Data)
{   
     286:	df 93       	push	r29
     288:	cf 93       	push	r28
     28a:	0f 92       	push	r0
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
     290:	89 83       	std	Y+1, r24	; 0x01
    /* wait for UART to become available */
    while(!UART_Ready);
     292:	80 91 bb 00 	lds	r24, 0x00BB
     296:	88 23       	and	r24, r24
     298:	e1 f3       	breq	.-8      	; 0x292 <UART_SendByte+0xc>
    UART_Ready = 0;
     29a:	10 92 bb 00 	sts	0x00BB, r1
    /* Send character */
    outp( Data, UDR );
     29e:	ec e2       	ldi	r30, 0x2C	; 44
     2a0:	f0 e0       	ldi	r31, 0x00	; 0
     2a2:	89 81       	ldd	r24, Y+1	; 0x01
     2a4:	80 83       	st	Z, r24
}
     2a6:	0f 90       	pop	r0
     2a8:	cf 91       	pop	r28
     2aa:	df 91       	pop	r29
     2ac:	08 95       	ret

000002ae <UART_ReceiveByte>:

u08 UART_ReceiveByte(void)
{
     2ae:	df 93       	push	r29
     2b0:	cf 93       	push	r28
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
    /* wait for UART to indicate that a character has been received */
    while(!UART_ReceivedChar);
     2b6:	80 91 ba 00 	lds	r24, 0x00BA
     2ba:	88 23       	and	r24, r24
     2bc:	e1 f3       	breq	.-8      	; 0x2b6 <UART_ReceiveByte+0x8>
    UART_ReceivedChar = 0;
     2be:	10 92 ba 00 	sts	0x00BA, r1
    /* read byte from UART data buffer */
    return UART_RxChar;
     2c2:	80 91 be 00 	lds	r24, 0x00BE
}
     2c6:	cf 91       	pop	r28
     2c8:	df 91       	pop	r29
     2ca:	08 95       	ret

000002cc <UART_PrintfProgStr>:

void UART_PrintfProgStr(PGM_P pBuf)
{
     2cc:	df 93       	push	r29
     2ce:	cf 93       	push	r28
     2d0:	00 d0       	rcall	.+0      	; 0x2d2 <UART_PrintfProgStr+0x6>
     2d2:	cd b7       	in	r28, 0x3d	; 61
     2d4:	de b7       	in	r29, 0x3e	; 62
     2d6:	9a 83       	std	Y+2, r25	; 0x02
     2d8:	89 83       	std	Y+1, r24	; 0x01
    /* wait for UART to become available */
    while(!UART_Ready);
     2da:	80 91 bb 00 	lds	r24, 0x00BB
     2de:	88 23       	and	r24, r24
     2e0:	e1 f3       	breq	.-8      	; 0x2da <UART_PrintfProgStr+0xe>
    UART_Ready = 0;
     2e2:	10 92 bb 00 	sts	0x00BB, r1
    /* Indicate to ISR the string to be sent */
    pUART_Buffer = (u08*) pBuf;
     2e6:	89 81       	ldd	r24, Y+1	; 0x01
     2e8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ea:	90 93 bd 00 	sts	0x00BD, r25
     2ee:	80 93 bc 00 	sts	0x00BC, r24
    /* Send first character */
    outp( *pUART_Buffer, UDR );
     2f2:	ac e2       	ldi	r26, 0x2C	; 44
     2f4:	b0 e0       	ldi	r27, 0x00	; 0
     2f6:	e0 91 bc 00 	lds	r30, 0x00BC
     2fa:	f0 91 bd 00 	lds	r31, 0x00BD
     2fe:	80 81       	ld	r24, Z
     300:	8c 93       	st	X, r24
}
     302:	0f 90       	pop	r0
     304:	0f 90       	pop	r0
     306:	cf 91       	pop	r28
     308:	df 91       	pop	r29
     30a:	08 95       	ret

0000030c <UART_PrintfEndOfLine>:

void UART_PrintfEndOfLine(void)
{
     30c:	df 93       	push	r29
     30e:	cf 93       	push	r28
     310:	00 d0       	rcall	.+0      	; 0x312 <UART_PrintfEndOfLine+0x6>
     312:	0f 92       	push	r0
     314:	cd b7       	in	r28, 0x3d	; 61
     316:	de b7       	in	r29, 0x3e	; 62
    /* wait for UART to become available */
    while(!UART_Ready);
     318:	80 91 bb 00 	lds	r24, 0x00BB
     31c:	88 23       	and	r24, r24
     31e:	e1 f3       	breq	.-8      	; 0x318 <UART_PrintfEndOfLine+0xc>
    UART_Ready = 0;
     320:	10 92 bb 00 	sts	0x00BB, r1
    /* Indicate to ISR the string to be sent */
    pUART_Buffer = (u08*) UART_pszEndOfLine;
     324:	84 e5       	ldi	r24, 0x54	; 84
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	90 93 bd 00 	sts	0x00BD, r25
     32c:	80 93 bc 00 	sts	0x00BC, r24
    /* Send first character */
    outp( pgm_read_byte(pUART_Buffer), UDR );
     330:	ac e2       	ldi	r26, 0x2C	; 44
     332:	b0 e0       	ldi	r27, 0x00	; 0
     334:	80 91 bc 00 	lds	r24, 0x00BC
     338:	90 91 bd 00 	lds	r25, 0x00BD
     33c:	9b 83       	std	Y+3, r25	; 0x03
     33e:	8a 83       	std	Y+2, r24	; 0x02
     340:	ea 81       	ldd	r30, Y+2	; 0x02
     342:	fb 81       	ldd	r31, Y+3	; 0x03
     344:	84 91       	lpm	r24, Z+
     346:	89 83       	std	Y+1, r24	; 0x01
     348:	89 81       	ldd	r24, Y+1	; 0x01
     34a:	8c 93       	st	X, r24
}
     34c:	0f 90       	pop	r0
     34e:	0f 90       	pop	r0
     350:	0f 90       	pop	r0
     352:	cf 91       	pop	r28
     354:	df 91       	pop	r29
     356:	08 95       	ret

00000358 <UART_PrintfU4>:

void UART_PrintfU4(u08 Data)
{
     358:	df 93       	push	r29
     35a:	cf 93       	push	r28
     35c:	00 d0       	rcall	.+0      	; 0x35e <UART_PrintfU4+0x6>
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	8a 83       	std	Y+2, r24	; 0x02
    /* Send 4-bit hex value */
    u08 Character = Data&0x0f;
     364:	8a 81       	ldd	r24, Y+2	; 0x02
     366:	8f 70       	andi	r24, 0x0F	; 15
     368:	89 83       	std	Y+1, r24	; 0x01
    if (Character>9)
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	8a 30       	cpi	r24, 0x0A	; 10
     36e:	20 f0       	brcs	.+8      	; 0x378 <UART_PrintfU4+0x20>
    {
        Character+='A'-10;
     370:	89 81       	ldd	r24, Y+1	; 0x01
     372:	89 5c       	subi	r24, 0xC9	; 201
     374:	89 83       	std	Y+1, r24	; 0x01
     376:	03 c0       	rjmp	.+6      	; 0x37e <UART_PrintfU4+0x26>
    }
    else
    {
        Character+='0';
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	80 5d       	subi	r24, 0xD0	; 208
     37c:	89 83       	std	Y+1, r24	; 0x01
    }
    UART_SendByte(Character);
     37e:	89 81       	ldd	r24, Y+1	; 0x01
     380:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
}
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	cf 91       	pop	r28
     38a:	df 91       	pop	r29
     38c:	08 95       	ret

0000038e <UART_Printfu08>:

void UART_Printfu08(u08 Data)
{
     38e:	df 93       	push	r29
     390:	cf 93       	push	r28
     392:	0f 92       	push	r0
     394:	cd b7       	in	r28, 0x3d	; 61
     396:	de b7       	in	r29, 0x3e	; 62
     398:	89 83       	std	Y+1, r24	; 0x01
    /* Send 8-bit hex value */
    UART_PrintfU4(Data>>4);
     39a:	89 81       	ldd	r24, Y+1	; 0x01
     39c:	82 95       	swap	r24
     39e:	8f 70       	andi	r24, 0x0F	; 15
     3a0:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
    UART_PrintfU4(Data   );
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
}
     3aa:	0f 90       	pop	r0
     3ac:	cf 91       	pop	r28
     3ae:	df 91       	pop	r29
     3b0:	08 95       	ret

000003b2 <UART_Printfu16>:

void UART_Printfu16(u16 Data)
{
     3b2:	df 93       	push	r29
     3b4:	cf 93       	push	r28
     3b6:	00 d0       	rcall	.+0      	; 0x3b8 <UART_Printfu16+0x6>
     3b8:	cd b7       	in	r28, 0x3d	; 61
     3ba:	de b7       	in	r29, 0x3e	; 62
     3bc:	9a 83       	std	Y+2, r25	; 0x02
     3be:	89 83       	std	Y+1, r24	; 0x01
    /* Send 16-bit hex value */
    UART_PrintfU4(Data>>12);
     3c0:	89 81       	ldd	r24, Y+1	; 0x01
     3c2:	9a 81       	ldd	r25, Y+2	; 0x02
     3c4:	89 2f       	mov	r24, r25
     3c6:	99 27       	eor	r25, r25
     3c8:	82 95       	swap	r24
     3ca:	8f 70       	andi	r24, 0x0F	; 15
     3cc:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
    UART_PrintfU4(Data>> 8);
     3d0:	89 81       	ldd	r24, Y+1	; 0x01
     3d2:	9a 81       	ldd	r25, Y+2	; 0x02
     3d4:	89 2f       	mov	r24, r25
     3d6:	99 27       	eor	r25, r25
     3d8:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
    UART_PrintfU4(Data>> 4);
     3dc:	89 81       	ldd	r24, Y+1	; 0x01
     3de:	9a 81       	ldd	r25, Y+2	; 0x02
     3e0:	92 95       	swap	r25
     3e2:	82 95       	swap	r24
     3e4:	8f 70       	andi	r24, 0x0F	; 15
     3e6:	89 27       	eor	r24, r25
     3e8:	9f 70       	andi	r25, 0x0F	; 15
     3ea:	89 27       	eor	r24, r25
     3ec:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
    UART_PrintfU4(Data    );
     3f0:	89 81       	ldd	r24, Y+1	; 0x01
     3f2:	0e 94 ac 01 	call	0x358	; 0x358 <UART_PrintfU4>
}
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	cf 91       	pop	r28
     3fc:	df 91       	pop	r29
     3fe:	08 95       	ret

00000400 <send_debug>:

void send_debug(char *msg, short size)
{
     400:	df 93       	push	r29
     402:	cf 93       	push	r28
     404:	00 d0       	rcall	.+0      	; 0x406 <send_debug+0x6>
     406:	00 d0       	rcall	.+0      	; 0x408 <send_debug+0x8>
     408:	00 d0       	rcall	.+0      	; 0x40a <send_debug+0xa>
     40a:	cd b7       	in	r28, 0x3d	; 61
     40c:	de b7       	in	r29, 0x3e	; 62
     40e:	9c 83       	std	Y+4, r25	; 0x04
     410:	8b 83       	std	Y+3, r24	; 0x03
     412:	7e 83       	std	Y+6, r23	; 0x06
     414:	6d 83       	std	Y+5, r22	; 0x05
	UART_SendByte(0xFE);
     416:	8e ef       	ldi	r24, 0xFE	; 254
     418:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
	int i;

	for(i = 0; i<size; i++)
     41c:	1a 82       	std	Y+2, r1	; 0x02
     41e:	19 82       	std	Y+1, r1	; 0x01
     420:	0f c0       	rjmp	.+30     	; 0x440 <send_debug+0x40>
	{
		UART_SendByte(msg[i]);
     422:	29 81       	ldd	r18, Y+1	; 0x01
     424:	3a 81       	ldd	r19, Y+2	; 0x02
     426:	8b 81       	ldd	r24, Y+3	; 0x03
     428:	9c 81       	ldd	r25, Y+4	; 0x04
     42a:	fc 01       	movw	r30, r24
     42c:	e2 0f       	add	r30, r18
     42e:	f3 1f       	adc	r31, r19
     430:	80 81       	ld	r24, Z
     432:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
void send_debug(char *msg, short size)
{
	UART_SendByte(0xFE);
	int i;

	for(i = 0; i<size; i++)
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	9a 81       	ldd	r25, Y+2	; 0x02
     43a:	01 96       	adiw	r24, 0x01	; 1
     43c:	9a 83       	std	Y+2, r25	; 0x02
     43e:	89 83       	std	Y+1, r24	; 0x01
     440:	29 81       	ldd	r18, Y+1	; 0x01
     442:	3a 81       	ldd	r19, Y+2	; 0x02
     444:	8d 81       	ldd	r24, Y+5	; 0x05
     446:	9e 81       	ldd	r25, Y+6	; 0x06
     448:	28 17       	cp	r18, r24
     44a:	39 07       	cpc	r19, r25
     44c:	54 f3       	brlt	.-44     	; 0x422 <send_debug+0x22>
	{
		UART_SendByte(msg[i]);
	}
	UART_SendByte(0xFF);
     44e:	8f ef       	ldi	r24, 0xFF	; 255
     450:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>

}
     454:	26 96       	adiw	r28, 0x06	; 6
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
     460:	cf 91       	pop	r28
     462:	df 91       	pop	r29
     464:	08 95       	ret

00000466 <send_debug_int>:
void send_debug_int(int c)
{
     466:	df 93       	push	r29
     468:	cf 93       	push	r28
     46a:	00 d0       	rcall	.+0      	; 0x46c <send_debug_int+0x6>
     46c:	cd b7       	in	r28, 0x3d	; 61
     46e:	de b7       	in	r29, 0x3e	; 62
     470:	9a 83       	std	Y+2, r25	; 0x02
     472:	89 83       	std	Y+1, r24	; 0x01
	UART_SendByte(0xFE);
     474:	8e ef       	ldi	r24, 0xFE	; 254
     476:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
	UART_SendByte(c);
     47a:	89 81       	ldd	r24, Y+1	; 0x01
     47c:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
	UART_SendByte(0xFF);
     480:	8f ef       	ldi	r24, 0xFF	; 255
     482:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>

}
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	cf 91       	pop	r28
     48c:	df 91       	pop	r29
     48e:	08 95       	ret

00000490 <send_debugu08>:

void send_debugu08(u08 data)
{
     490:	df 93       	push	r29
     492:	cf 93       	push	r28
     494:	0f 92       	push	r0
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
     49a:	89 83       	std	Y+1, r24	; 0x01
	UART_SendByte(0xFE);
     49c:	8e ef       	ldi	r24, 0xFE	; 254
     49e:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
	UART_SendByte(data);
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>
	UART_SendByte(0xFF);
     4a8:	8f ef       	ldi	r24, 0xFF	; 255
     4aa:	0e 94 43 01 	call	0x286	; 0x286 <UART_SendByte>

}
     4ae:	0f 90       	pop	r0
     4b0:	cf 91       	pop	r28
     4b2:	df 91       	pop	r29
     4b4:	08 95       	ret

000004b6 <UART_Init>:
void UART_Init(void)
{
     4b6:	df 93       	push	r29
     4b8:	cf 93       	push	r28
     4ba:	cd b7       	in	r28, 0x3d	; 61
     4bc:	de b7       	in	r29, 0x3e	; 62
    UART_Ready        = 1;
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 93 bb 00 	sts	0x00BB, r24
    UART_ReceivedChar = 0;
     4c4:	10 92 ba 00 	sts	0x00BA, r1
    pUART_Buffer      = 0;
     4c8:	10 92 bd 00 	sts	0x00BD, r1
     4cc:	10 92 bc 00 	sts	0x00BC, r1
    /* configure asynchronous operation, no parity, 1 stop bit, 8 data bits, Tx on rising edge */
    outp((1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|(0<<USBS)|(1<<UCSZ1)|(1<<UCSZ0)|(0<<UCPOL),UCSRC);       
     4d0:	e0 e4       	ldi	r30, 0x40	; 64
     4d2:	f0 e0       	ldi	r31, 0x00	; 0
     4d4:	86 e8       	ldi	r24, 0x86	; 134
     4d6:	80 83       	st	Z, r24
    /* enable RxD/TxD and ints */
    outp((1<<RXCIE)|(1<<TXCIE)|(1<<RXEN)|(1<<TXEN)|(0<<UCSZ2),UCSRB);       
     4d8:	ea e2       	ldi	r30, 0x2A	; 42
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	88 ed       	ldi	r24, 0xD8	; 216
     4de:	80 83       	st	Z, r24
    /* set baud rate */
    outp((u08)(UART_BAUD_SELECT >> 8), UBRRH);          
     4e0:	e0 e4       	ldi	r30, 0x40	; 64
     4e2:	f0 e0       	ldi	r31, 0x00	; 0
     4e4:	10 82       	st	Z, r1
    outp((u08)(UART_BAUD_SELECT & 0x00FF), UBRRL);          
     4e6:	e9 e2       	ldi	r30, 0x29	; 41
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	87 e6       	ldi	r24, 0x67	; 103
     4ec:	80 83       	st	Z, r24
    /* enable interrupts */
    sei();
     4ee:	78 94       	sei
}
     4f0:	cf 91       	pop	r28
     4f2:	df 91       	pop	r29
     4f4:	08 95       	ret

000004f6 <printf>:
     4f6:	a0 e0       	ldi	r26, 0x00	; 0
     4f8:	b0 e0       	ldi	r27, 0x00	; 0
     4fa:	e1 e8       	ldi	r30, 0x81	; 129
     4fc:	f2 e0       	ldi	r31, 0x02	; 2
     4fe:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__prologue_saves__+0x20>
     502:	fe 01       	movw	r30, r28
     504:	35 96       	adiw	r30, 0x05	; 5
     506:	61 91       	ld	r22, Z+
     508:	71 91       	ld	r23, Z+
     50a:	80 91 c1 00 	lds	r24, 0x00C1
     50e:	90 91 c2 00 	lds	r25, 0x00C2
     512:	af 01       	movw	r20, r30
     514:	0e 94 a5 02 	call	0x54a	; 0x54a <vfprintf>
     518:	20 96       	adiw	r28, 0x00	; 0
     51a:	e2 e0       	ldi	r30, 0x02	; 2
     51c:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__epilogue_restores__+0x20>

00000520 <scanf>:
     520:	a0 e0       	ldi	r26, 0x00	; 0
     522:	b0 e0       	ldi	r27, 0x00	; 0
     524:	e6 e9       	ldi	r30, 0x96	; 150
     526:	f2 e0       	ldi	r31, 0x02	; 2
     528:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__prologue_saves__+0x20>
     52c:	fe 01       	movw	r30, r28
     52e:	35 96       	adiw	r30, 0x05	; 5
     530:	61 91       	ld	r22, Z+
     532:	71 91       	ld	r23, Z+
     534:	80 91 bf 00 	lds	r24, 0x00BF
     538:	90 91 c0 00 	lds	r25, 0x00C0
     53c:	af 01       	movw	r20, r30
     53e:	0e 94 06 06 	call	0xc0c	; 0xc0c <vfscanf>
     542:	20 96       	adiw	r28, 0x00	; 0
     544:	e2 e0       	ldi	r30, 0x02	; 2
     546:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__epilogue_restores__+0x20>

0000054a <vfprintf>:
     54a:	ab e0       	ldi	r26, 0x0B	; 11
     54c:	b0 e0       	ldi	r27, 0x00	; 0
     54e:	eb ea       	ldi	r30, 0xAB	; 171
     550:	f2 e0       	ldi	r31, 0x02	; 2
     552:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__prologue_saves__>
     556:	3c 01       	movw	r6, r24
     558:	2b 01       	movw	r4, r22
     55a:	5a 01       	movw	r10, r20
     55c:	fc 01       	movw	r30, r24
     55e:	17 82       	std	Z+7, r1	; 0x07
     560:	16 82       	std	Z+6, r1	; 0x06
     562:	83 81       	ldd	r24, Z+3	; 0x03
     564:	81 fd       	sbrc	r24, 1
     566:	03 c0       	rjmp	.+6      	; 0x56e <vfprintf+0x24>
     568:	6f ef       	ldi	r22, 0xFF	; 255
     56a:	7f ef       	ldi	r23, 0xFF	; 255
     56c:	c6 c1       	rjmp	.+908    	; 0x8fa <__stack+0x9b>
     56e:	9a e0       	ldi	r25, 0x0A	; 10
     570:	89 2e       	mov	r8, r25
     572:	1e 01       	movw	r2, r28
     574:	08 94       	sec
     576:	21 1c       	adc	r2, r1
     578:	31 1c       	adc	r3, r1
     57a:	f3 01       	movw	r30, r6
     57c:	23 81       	ldd	r18, Z+3	; 0x03
     57e:	f2 01       	movw	r30, r4
     580:	23 fd       	sbrc	r18, 3
     582:	85 91       	lpm	r24, Z+
     584:	23 ff       	sbrs	r18, 3
     586:	81 91       	ld	r24, Z+
     588:	2f 01       	movw	r4, r30
     58a:	88 23       	and	r24, r24
     58c:	09 f4       	brne	.+2      	; 0x590 <vfprintf+0x46>
     58e:	b2 c1       	rjmp	.+868    	; 0x8f4 <__stack+0x95>
     590:	85 32       	cpi	r24, 0x25	; 37
     592:	39 f4       	brne	.+14     	; 0x5a2 <vfprintf+0x58>
     594:	23 fd       	sbrc	r18, 3
     596:	85 91       	lpm	r24, Z+
     598:	23 ff       	sbrs	r18, 3
     59a:	81 91       	ld	r24, Z+
     59c:	2f 01       	movw	r4, r30
     59e:	85 32       	cpi	r24, 0x25	; 37
     5a0:	29 f4       	brne	.+10     	; 0x5ac <vfprintf+0x62>
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	b3 01       	movw	r22, r6
     5a6:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     5aa:	e7 cf       	rjmp	.-50     	; 0x57a <vfprintf+0x30>
     5ac:	98 2f       	mov	r25, r24
     5ae:	ff 24       	eor	r15, r15
     5b0:	ee 24       	eor	r14, r14
     5b2:	99 24       	eor	r9, r9
     5b4:	ff e1       	ldi	r31, 0x1F	; 31
     5b6:	ff 15       	cp	r31, r15
     5b8:	d0 f0       	brcs	.+52     	; 0x5ee <vfprintf+0xa4>
     5ba:	9b 32       	cpi	r25, 0x2B	; 43
     5bc:	69 f0       	breq	.+26     	; 0x5d8 <vfprintf+0x8e>
     5be:	9c 32       	cpi	r25, 0x2C	; 44
     5c0:	28 f4       	brcc	.+10     	; 0x5cc <vfprintf+0x82>
     5c2:	90 32       	cpi	r25, 0x20	; 32
     5c4:	59 f0       	breq	.+22     	; 0x5dc <vfprintf+0x92>
     5c6:	93 32       	cpi	r25, 0x23	; 35
     5c8:	91 f4       	brne	.+36     	; 0x5ee <vfprintf+0xa4>
     5ca:	0e c0       	rjmp	.+28     	; 0x5e8 <vfprintf+0x9e>
     5cc:	9d 32       	cpi	r25, 0x2D	; 45
     5ce:	49 f0       	breq	.+18     	; 0x5e2 <vfprintf+0x98>
     5d0:	90 33       	cpi	r25, 0x30	; 48
     5d2:	69 f4       	brne	.+26     	; 0x5ee <vfprintf+0xa4>
     5d4:	41 e0       	ldi	r20, 0x01	; 1
     5d6:	24 c0       	rjmp	.+72     	; 0x620 <vfprintf+0xd6>
     5d8:	52 e0       	ldi	r21, 0x02	; 2
     5da:	f5 2a       	or	r15, r21
     5dc:	84 e0       	ldi	r24, 0x04	; 4
     5de:	f8 2a       	or	r15, r24
     5e0:	28 c0       	rjmp	.+80     	; 0x632 <vfprintf+0xe8>
     5e2:	98 e0       	ldi	r25, 0x08	; 8
     5e4:	f9 2a       	or	r15, r25
     5e6:	25 c0       	rjmp	.+74     	; 0x632 <vfprintf+0xe8>
     5e8:	e0 e1       	ldi	r30, 0x10	; 16
     5ea:	fe 2a       	or	r15, r30
     5ec:	22 c0       	rjmp	.+68     	; 0x632 <vfprintf+0xe8>
     5ee:	f7 fc       	sbrc	r15, 7
     5f0:	29 c0       	rjmp	.+82     	; 0x644 <vfprintf+0xfa>
     5f2:	89 2f       	mov	r24, r25
     5f4:	80 53       	subi	r24, 0x30	; 48
     5f6:	8a 30       	cpi	r24, 0x0A	; 10
     5f8:	70 f4       	brcc	.+28     	; 0x616 <vfprintf+0xcc>
     5fa:	f6 fe       	sbrs	r15, 6
     5fc:	05 c0       	rjmp	.+10     	; 0x608 <vfprintf+0xbe>
     5fe:	98 9c       	mul	r9, r8
     600:	90 2c       	mov	r9, r0
     602:	11 24       	eor	r1, r1
     604:	98 0e       	add	r9, r24
     606:	15 c0       	rjmp	.+42     	; 0x632 <vfprintf+0xe8>
     608:	e8 9c       	mul	r14, r8
     60a:	e0 2c       	mov	r14, r0
     60c:	11 24       	eor	r1, r1
     60e:	e8 0e       	add	r14, r24
     610:	f0 e2       	ldi	r31, 0x20	; 32
     612:	ff 2a       	or	r15, r31
     614:	0e c0       	rjmp	.+28     	; 0x632 <vfprintf+0xe8>
     616:	9e 32       	cpi	r25, 0x2E	; 46
     618:	29 f4       	brne	.+10     	; 0x624 <vfprintf+0xda>
     61a:	f6 fc       	sbrc	r15, 6
     61c:	6b c1       	rjmp	.+726    	; 0x8f4 <__stack+0x95>
     61e:	40 e4       	ldi	r20, 0x40	; 64
     620:	f4 2a       	or	r15, r20
     622:	07 c0       	rjmp	.+14     	; 0x632 <vfprintf+0xe8>
     624:	9c 36       	cpi	r25, 0x6C	; 108
     626:	19 f4       	brne	.+6      	; 0x62e <vfprintf+0xe4>
     628:	50 e8       	ldi	r21, 0x80	; 128
     62a:	f5 2a       	or	r15, r21
     62c:	02 c0       	rjmp	.+4      	; 0x632 <vfprintf+0xe8>
     62e:	98 36       	cpi	r25, 0x68	; 104
     630:	49 f4       	brne	.+18     	; 0x644 <vfprintf+0xfa>
     632:	f2 01       	movw	r30, r4
     634:	23 fd       	sbrc	r18, 3
     636:	95 91       	lpm	r25, Z+
     638:	23 ff       	sbrs	r18, 3
     63a:	91 91       	ld	r25, Z+
     63c:	2f 01       	movw	r4, r30
     63e:	99 23       	and	r25, r25
     640:	09 f0       	breq	.+2      	; 0x644 <vfprintf+0xfa>
     642:	b8 cf       	rjmp	.-144    	; 0x5b4 <vfprintf+0x6a>
     644:	89 2f       	mov	r24, r25
     646:	85 54       	subi	r24, 0x45	; 69
     648:	83 30       	cpi	r24, 0x03	; 3
     64a:	18 f0       	brcs	.+6      	; 0x652 <vfprintf+0x108>
     64c:	80 52       	subi	r24, 0x20	; 32
     64e:	83 30       	cpi	r24, 0x03	; 3
     650:	38 f4       	brcc	.+14     	; 0x660 <vfprintf+0x116>
     652:	44 e0       	ldi	r20, 0x04	; 4
     654:	50 e0       	ldi	r21, 0x00	; 0
     656:	a4 0e       	add	r10, r20
     658:	b5 1e       	adc	r11, r21
     65a:	5f e3       	ldi	r21, 0x3F	; 63
     65c:	59 83       	std	Y+1, r21	; 0x01
     65e:	0f c0       	rjmp	.+30     	; 0x67e <vfprintf+0x134>
     660:	93 36       	cpi	r25, 0x63	; 99
     662:	31 f0       	breq	.+12     	; 0x670 <vfprintf+0x126>
     664:	93 37       	cpi	r25, 0x73	; 115
     666:	79 f0       	breq	.+30     	; 0x686 <vfprintf+0x13c>
     668:	93 35       	cpi	r25, 0x53	; 83
     66a:	09 f0       	breq	.+2      	; 0x66e <vfprintf+0x124>
     66c:	56 c0       	rjmp	.+172    	; 0x71a <vfprintf+0x1d0>
     66e:	20 c0       	rjmp	.+64     	; 0x6b0 <vfprintf+0x166>
     670:	f5 01       	movw	r30, r10
     672:	80 81       	ld	r24, Z
     674:	89 83       	std	Y+1, r24	; 0x01
     676:	42 e0       	ldi	r20, 0x02	; 2
     678:	50 e0       	ldi	r21, 0x00	; 0
     67a:	a4 0e       	add	r10, r20
     67c:	b5 1e       	adc	r11, r21
     67e:	61 01       	movw	r12, r2
     680:	01 e0       	ldi	r16, 0x01	; 1
     682:	10 e0       	ldi	r17, 0x00	; 0
     684:	12 c0       	rjmp	.+36     	; 0x6aa <vfprintf+0x160>
     686:	f5 01       	movw	r30, r10
     688:	c0 80       	ld	r12, Z
     68a:	d1 80       	ldd	r13, Z+1	; 0x01
     68c:	f6 fc       	sbrc	r15, 6
     68e:	03 c0       	rjmp	.+6      	; 0x696 <vfprintf+0x14c>
     690:	6f ef       	ldi	r22, 0xFF	; 255
     692:	7f ef       	ldi	r23, 0xFF	; 255
     694:	02 c0       	rjmp	.+4      	; 0x69a <vfprintf+0x150>
     696:	69 2d       	mov	r22, r9
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	42 e0       	ldi	r20, 0x02	; 2
     69c:	50 e0       	ldi	r21, 0x00	; 0
     69e:	a4 0e       	add	r10, r20
     6a0:	b5 1e       	adc	r11, r21
     6a2:	c6 01       	movw	r24, r12
     6a4:	0e 94 35 07 	call	0xe6a	; 0xe6a <strnlen>
     6a8:	8c 01       	movw	r16, r24
     6aa:	5f e7       	ldi	r21, 0x7F	; 127
     6ac:	f5 22       	and	r15, r21
     6ae:	14 c0       	rjmp	.+40     	; 0x6d8 <vfprintf+0x18e>
     6b0:	f5 01       	movw	r30, r10
     6b2:	c0 80       	ld	r12, Z
     6b4:	d1 80       	ldd	r13, Z+1	; 0x01
     6b6:	f6 fc       	sbrc	r15, 6
     6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <vfprintf+0x176>
     6ba:	6f ef       	ldi	r22, 0xFF	; 255
     6bc:	7f ef       	ldi	r23, 0xFF	; 255
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0x17a>
     6c0:	69 2d       	mov	r22, r9
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	42 e0       	ldi	r20, 0x02	; 2
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	a4 0e       	add	r10, r20
     6ca:	b5 1e       	adc	r11, r21
     6cc:	c6 01       	movw	r24, r12
     6ce:	0e 94 2a 07 	call	0xe54	; 0xe54 <strnlen_P>
     6d2:	8c 01       	movw	r16, r24
     6d4:	50 e8       	ldi	r21, 0x80	; 128
     6d6:	f5 2a       	or	r15, r21
     6d8:	f3 fe       	sbrs	r15, 3
     6da:	07 c0       	rjmp	.+14     	; 0x6ea <vfprintf+0x1a0>
     6dc:	1a c0       	rjmp	.+52     	; 0x712 <vfprintf+0x1c8>
     6de:	80 e2       	ldi	r24, 0x20	; 32
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	b3 01       	movw	r22, r6
     6e4:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     6e8:	ea 94       	dec	r14
     6ea:	8e 2d       	mov	r24, r14
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	08 17       	cp	r16, r24
     6f0:	19 07       	cpc	r17, r25
     6f2:	a8 f3       	brcs	.-22     	; 0x6de <vfprintf+0x194>
     6f4:	0e c0       	rjmp	.+28     	; 0x712 <vfprintf+0x1c8>
     6f6:	f6 01       	movw	r30, r12
     6f8:	f7 fc       	sbrc	r15, 7
     6fa:	85 91       	lpm	r24, Z+
     6fc:	f7 fe       	sbrs	r15, 7
     6fe:	81 91       	ld	r24, Z+
     700:	6f 01       	movw	r12, r30
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	b3 01       	movw	r22, r6
     706:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     70a:	e1 10       	cpse	r14, r1
     70c:	ea 94       	dec	r14
     70e:	01 50       	subi	r16, 0x01	; 1
     710:	10 40       	sbci	r17, 0x00	; 0
     712:	01 15       	cp	r16, r1
     714:	11 05       	cpc	r17, r1
     716:	79 f7       	brne	.-34     	; 0x6f6 <vfprintf+0x1ac>
     718:	ea c0       	rjmp	.+468    	; 0x8ee <__stack+0x8f>
     71a:	94 36       	cpi	r25, 0x64	; 100
     71c:	11 f0       	breq	.+4      	; 0x722 <vfprintf+0x1d8>
     71e:	99 36       	cpi	r25, 0x69	; 105
     720:	69 f5       	brne	.+90     	; 0x77c <vfprintf+0x232>
     722:	f7 fe       	sbrs	r15, 7
     724:	08 c0       	rjmp	.+16     	; 0x736 <vfprintf+0x1ec>
     726:	f5 01       	movw	r30, r10
     728:	20 81       	ld	r18, Z
     72a:	31 81       	ldd	r19, Z+1	; 0x01
     72c:	42 81       	ldd	r20, Z+2	; 0x02
     72e:	53 81       	ldd	r21, Z+3	; 0x03
     730:	84 e0       	ldi	r24, 0x04	; 4
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0a c0       	rjmp	.+20     	; 0x74a <vfprintf+0x200>
     736:	f5 01       	movw	r30, r10
     738:	80 81       	ld	r24, Z
     73a:	91 81       	ldd	r25, Z+1	; 0x01
     73c:	9c 01       	movw	r18, r24
     73e:	44 27       	eor	r20, r20
     740:	37 fd       	sbrc	r19, 7
     742:	40 95       	com	r20
     744:	54 2f       	mov	r21, r20
     746:	82 e0       	ldi	r24, 0x02	; 2
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	a8 0e       	add	r10, r24
     74c:	b9 1e       	adc	r11, r25
     74e:	9f e6       	ldi	r25, 0x6F	; 111
     750:	f9 22       	and	r15, r25
     752:	57 ff       	sbrs	r21, 7
     754:	09 c0       	rjmp	.+18     	; 0x768 <vfprintf+0x21e>
     756:	50 95       	com	r21
     758:	40 95       	com	r20
     75a:	30 95       	com	r19
     75c:	21 95       	neg	r18
     75e:	3f 4f       	sbci	r19, 0xFF	; 255
     760:	4f 4f       	sbci	r20, 0xFF	; 255
     762:	5f 4f       	sbci	r21, 0xFF	; 255
     764:	e0 e8       	ldi	r30, 0x80	; 128
     766:	fe 2a       	or	r15, r30
     768:	ca 01       	movw	r24, r20
     76a:	b9 01       	movw	r22, r18
     76c:	a1 01       	movw	r20, r2
     76e:	2a e0       	ldi	r18, 0x0A	; 10
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ultoa_invert>
     776:	d8 2e       	mov	r13, r24
     778:	d2 18       	sub	r13, r2
     77a:	40 c0       	rjmp	.+128    	; 0x7fc <vfprintf+0x2b2>
     77c:	95 37       	cpi	r25, 0x75	; 117
     77e:	29 f4       	brne	.+10     	; 0x78a <vfprintf+0x240>
     780:	1f 2d       	mov	r17, r15
     782:	1f 7e       	andi	r17, 0xEF	; 239
     784:	2a e0       	ldi	r18, 0x0A	; 10
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	1d c0       	rjmp	.+58     	; 0x7c4 <vfprintf+0x27a>
     78a:	1f 2d       	mov	r17, r15
     78c:	19 7f       	andi	r17, 0xF9	; 249
     78e:	9f 36       	cpi	r25, 0x6F	; 111
     790:	61 f0       	breq	.+24     	; 0x7aa <vfprintf+0x260>
     792:	90 37       	cpi	r25, 0x70	; 112
     794:	20 f4       	brcc	.+8      	; 0x79e <vfprintf+0x254>
     796:	98 35       	cpi	r25, 0x58	; 88
     798:	09 f0       	breq	.+2      	; 0x79c <vfprintf+0x252>
     79a:	ac c0       	rjmp	.+344    	; 0x8f4 <__stack+0x95>
     79c:	0f c0       	rjmp	.+30     	; 0x7bc <vfprintf+0x272>
     79e:	90 37       	cpi	r25, 0x70	; 112
     7a0:	39 f0       	breq	.+14     	; 0x7b0 <vfprintf+0x266>
     7a2:	98 37       	cpi	r25, 0x78	; 120
     7a4:	09 f0       	breq	.+2      	; 0x7a8 <vfprintf+0x25e>
     7a6:	a6 c0       	rjmp	.+332    	; 0x8f4 <__stack+0x95>
     7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <vfprintf+0x268>
     7aa:	28 e0       	ldi	r18, 0x08	; 8
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	0a c0       	rjmp	.+20     	; 0x7c4 <vfprintf+0x27a>
     7b0:	10 61       	ori	r17, 0x10	; 16
     7b2:	14 fd       	sbrc	r17, 4
     7b4:	14 60       	ori	r17, 0x04	; 4
     7b6:	20 e1       	ldi	r18, 0x10	; 16
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <vfprintf+0x27a>
     7bc:	14 fd       	sbrc	r17, 4
     7be:	16 60       	ori	r17, 0x06	; 6
     7c0:	20 e1       	ldi	r18, 0x10	; 16
     7c2:	32 e0       	ldi	r19, 0x02	; 2
     7c4:	17 ff       	sbrs	r17, 7
     7c6:	08 c0       	rjmp	.+16     	; 0x7d8 <vfprintf+0x28e>
     7c8:	f5 01       	movw	r30, r10
     7ca:	60 81       	ld	r22, Z
     7cc:	71 81       	ldd	r23, Z+1	; 0x01
     7ce:	82 81       	ldd	r24, Z+2	; 0x02
     7d0:	93 81       	ldd	r25, Z+3	; 0x03
     7d2:	44 e0       	ldi	r20, 0x04	; 4
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	08 c0       	rjmp	.+16     	; 0x7e8 <vfprintf+0x29e>
     7d8:	f5 01       	movw	r30, r10
     7da:	80 81       	ld	r24, Z
     7dc:	91 81       	ldd	r25, Z+1	; 0x01
     7de:	bc 01       	movw	r22, r24
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	42 e0       	ldi	r20, 0x02	; 2
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	a4 0e       	add	r10, r20
     7ea:	b5 1e       	adc	r11, r21
     7ec:	a1 01       	movw	r20, r2
     7ee:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ultoa_invert>
     7f2:	d8 2e       	mov	r13, r24
     7f4:	d2 18       	sub	r13, r2
     7f6:	8f e7       	ldi	r24, 0x7F	; 127
     7f8:	f8 2e       	mov	r15, r24
     7fa:	f1 22       	and	r15, r17
     7fc:	f6 fe       	sbrs	r15, 6
     7fe:	0b c0       	rjmp	.+22     	; 0x816 <vfprintf+0x2cc>
     800:	5e ef       	ldi	r21, 0xFE	; 254
     802:	f5 22       	and	r15, r21
     804:	d9 14       	cp	r13, r9
     806:	38 f4       	brcc	.+14     	; 0x816 <vfprintf+0x2cc>
     808:	f4 fe       	sbrs	r15, 4
     80a:	07 c0       	rjmp	.+14     	; 0x81a <vfprintf+0x2d0>
     80c:	f2 fc       	sbrc	r15, 2
     80e:	05 c0       	rjmp	.+10     	; 0x81a <vfprintf+0x2d0>
     810:	8f ee       	ldi	r24, 0xEF	; 239
     812:	f8 22       	and	r15, r24
     814:	02 c0       	rjmp	.+4      	; 0x81a <vfprintf+0x2d0>
     816:	1d 2d       	mov	r17, r13
     818:	01 c0       	rjmp	.+2      	; 0x81c <vfprintf+0x2d2>
     81a:	19 2d       	mov	r17, r9
     81c:	f4 fe       	sbrs	r15, 4
     81e:	0d c0       	rjmp	.+26     	; 0x83a <vfprintf+0x2f0>
     820:	fe 01       	movw	r30, r28
     822:	ed 0d       	add	r30, r13
     824:	f1 1d       	adc	r31, r1
     826:	80 81       	ld	r24, Z
     828:	80 33       	cpi	r24, 0x30	; 48
     82a:	19 f4       	brne	.+6      	; 0x832 <vfprintf+0x2e8>
     82c:	99 ee       	ldi	r25, 0xE9	; 233
     82e:	f9 22       	and	r15, r25
     830:	08 c0       	rjmp	.+16     	; 0x842 <vfprintf+0x2f8>
     832:	1f 5f       	subi	r17, 0xFF	; 255
     834:	f2 fe       	sbrs	r15, 2
     836:	05 c0       	rjmp	.+10     	; 0x842 <vfprintf+0x2f8>
     838:	03 c0       	rjmp	.+6      	; 0x840 <vfprintf+0x2f6>
     83a:	8f 2d       	mov	r24, r15
     83c:	86 78       	andi	r24, 0x86	; 134
     83e:	09 f0       	breq	.+2      	; 0x842 <vfprintf+0x2f8>
     840:	1f 5f       	subi	r17, 0xFF	; 255
     842:	0f 2d       	mov	r16, r15
     844:	f3 fc       	sbrc	r15, 3
     846:	14 c0       	rjmp	.+40     	; 0x870 <__stack+0x11>
     848:	f0 fe       	sbrs	r15, 0
     84a:	0f c0       	rjmp	.+30     	; 0x86a <__stack+0xb>
     84c:	1e 15       	cp	r17, r14
     84e:	10 f0       	brcs	.+4      	; 0x854 <vfprintf+0x30a>
     850:	9d 2c       	mov	r9, r13
     852:	0b c0       	rjmp	.+22     	; 0x86a <__stack+0xb>
     854:	9d 2c       	mov	r9, r13
     856:	9e 0c       	add	r9, r14
     858:	91 1a       	sub	r9, r17
     85a:	1e 2d       	mov	r17, r14
     85c:	06 c0       	rjmp	.+12     	; 0x86a <__stack+0xb>
     85e:	80 e2       	ldi	r24, 0x20	; 32
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	b3 01       	movw	r22, r6
     864:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     868:	1f 5f       	subi	r17, 0xFF	; 255
     86a:	1e 15       	cp	r17, r14
     86c:	c0 f3       	brcs	.-16     	; 0x85e <vfprintf+0x314>
     86e:	04 c0       	rjmp	.+8      	; 0x878 <__stack+0x19>
     870:	1e 15       	cp	r17, r14
     872:	10 f4       	brcc	.+4      	; 0x878 <__stack+0x19>
     874:	e1 1a       	sub	r14, r17
     876:	01 c0       	rjmp	.+2      	; 0x87a <__stack+0x1b>
     878:	ee 24       	eor	r14, r14
     87a:	04 ff       	sbrs	r16, 4
     87c:	0f c0       	rjmp	.+30     	; 0x89c <__stack+0x3d>
     87e:	80 e3       	ldi	r24, 0x30	; 48
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	b3 01       	movw	r22, r6
     884:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     888:	02 ff       	sbrs	r16, 2
     88a:	1d c0       	rjmp	.+58     	; 0x8c6 <__stack+0x67>
     88c:	01 fd       	sbrc	r16, 1
     88e:	03 c0       	rjmp	.+6      	; 0x896 <__stack+0x37>
     890:	88 e7       	ldi	r24, 0x78	; 120
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e c0       	rjmp	.+28     	; 0x8b2 <__stack+0x53>
     896:	88 e5       	ldi	r24, 0x58	; 88
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0b c0       	rjmp	.+22     	; 0x8b2 <__stack+0x53>
     89c:	80 2f       	mov	r24, r16
     89e:	86 78       	andi	r24, 0x86	; 134
     8a0:	91 f0       	breq	.+36     	; 0x8c6 <__stack+0x67>
     8a2:	01 ff       	sbrs	r16, 1
     8a4:	02 c0       	rjmp	.+4      	; 0x8aa <__stack+0x4b>
     8a6:	8b e2       	ldi	r24, 0x2B	; 43
     8a8:	01 c0       	rjmp	.+2      	; 0x8ac <__stack+0x4d>
     8aa:	80 e2       	ldi	r24, 0x20	; 32
     8ac:	f7 fc       	sbrc	r15, 7
     8ae:	8d e2       	ldi	r24, 0x2D	; 45
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	b3 01       	movw	r22, r6
     8b4:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <__stack+0x67>
     8ba:	80 e3       	ldi	r24, 0x30	; 48
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	b3 01       	movw	r22, r6
     8c0:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     8c4:	9a 94       	dec	r9
     8c6:	d9 14       	cp	r13, r9
     8c8:	c0 f3       	brcs	.-16     	; 0x8ba <__stack+0x5b>
     8ca:	da 94       	dec	r13
     8cc:	f1 01       	movw	r30, r2
     8ce:	ed 0d       	add	r30, r13
     8d0:	f1 1d       	adc	r31, r1
     8d2:	80 81       	ld	r24, Z
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	b3 01       	movw	r22, r6
     8d8:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     8dc:	dd 20       	and	r13, r13
     8de:	a9 f7       	brne	.-22     	; 0x8ca <__stack+0x6b>
     8e0:	06 c0       	rjmp	.+12     	; 0x8ee <__stack+0x8f>
     8e2:	80 e2       	ldi	r24, 0x20	; 32
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	b3 01       	movw	r22, r6
     8e8:	0e 94 82 07 	call	0xf04	; 0xf04 <fputc>
     8ec:	ea 94       	dec	r14
     8ee:	ee 20       	and	r14, r14
     8f0:	c1 f7       	brne	.-16     	; 0x8e2 <__stack+0x83>
     8f2:	43 ce       	rjmp	.-890    	; 0x57a <vfprintf+0x30>
     8f4:	f3 01       	movw	r30, r6
     8f6:	66 81       	ldd	r22, Z+6	; 0x06
     8f8:	77 81       	ldd	r23, Z+7	; 0x07
     8fa:	cb 01       	movw	r24, r22
     8fc:	2b 96       	adiw	r28, 0x0b	; 11
     8fe:	e2 e1       	ldi	r30, 0x12	; 18
     900:	0c 94 45 08 	jmp	0x108a	; 0x108a <__epilogue_restores__>

00000904 <putval>:
     904:	fc 01       	movw	r30, r24
     906:	20 fd       	sbrc	r18, 0
     908:	08 c0       	rjmp	.+16     	; 0x91a <putval+0x16>
     90a:	23 fd       	sbrc	r18, 3
     90c:	05 c0       	rjmp	.+10     	; 0x918 <putval+0x14>
     90e:	22 ff       	sbrs	r18, 2
     910:	02 c0       	rjmp	.+4      	; 0x916 <putval+0x12>
     912:	73 83       	std	Z+3, r23	; 0x03
     914:	62 83       	std	Z+2, r22	; 0x02
     916:	51 83       	std	Z+1, r21	; 0x01
     918:	40 83       	st	Z, r20
     91a:	08 95       	ret

0000091c <mulacc>:
     91c:	ef 92       	push	r14
     91e:	ff 92       	push	r15
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	44 ff       	sbrs	r20, 4
     926:	02 c0       	rjmp	.+4      	; 0x92c <mulacc+0x10>
     928:	33 e0       	ldi	r19, 0x03	; 3
     92a:	11 c0       	rjmp	.+34     	; 0x94e <mulacc+0x32>
     92c:	46 ff       	sbrs	r20, 6
     92e:	02 c0       	rjmp	.+4      	; 0x934 <mulacc+0x18>
     930:	34 e0       	ldi	r19, 0x04	; 4
     932:	0d c0       	rjmp	.+26     	; 0x94e <mulacc+0x32>
     934:	db 01       	movw	r26, r22
     936:	fc 01       	movw	r30, r24
     938:	aa 0f       	add	r26, r26
     93a:	bb 1f       	adc	r27, r27
     93c:	ee 1f       	adc	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	10 94       	com	r1
     942:	d1 f7       	brne	.-12     	; 0x938 <mulacc+0x1c>
     944:	6a 0f       	add	r22, r26
     946:	7b 1f       	adc	r23, r27
     948:	8e 1f       	adc	r24, r30
     94a:	9f 1f       	adc	r25, r31
     94c:	31 e0       	ldi	r19, 0x01	; 1
     94e:	66 0f       	add	r22, r22
     950:	77 1f       	adc	r23, r23
     952:	88 1f       	adc	r24, r24
     954:	99 1f       	adc	r25, r25
     956:	31 50       	subi	r19, 0x01	; 1
     958:	d1 f7       	brne	.-12     	; 0x94e <mulacc+0x32>
     95a:	7b 01       	movw	r14, r22
     95c:	8c 01       	movw	r16, r24
     95e:	e2 0e       	add	r14, r18
     960:	f1 1c       	adc	r15, r1
     962:	01 1d       	adc	r16, r1
     964:	11 1d       	adc	r17, r1
     966:	a8 01       	movw	r20, r16
     968:	97 01       	movw	r18, r14
     96a:	b7 01       	movw	r22, r14
     96c:	ca 01       	movw	r24, r20
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	08 95       	ret

00000978 <skip_spaces>:
     978:	0f 93       	push	r16
     97a:	1f 93       	push	r17
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
     980:	8c 01       	movw	r16, r24
     982:	c8 01       	movw	r24, r16
     984:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     988:	ec 01       	movw	r28, r24
     98a:	97 fd       	sbrc	r25, 7
     98c:	08 c0       	rjmp	.+16     	; 0x99e <skip_spaces+0x26>
     98e:	0e 94 17 07 	call	0xe2e	; 0xe2e <isspace>
     992:	89 2b       	or	r24, r25
     994:	b1 f7       	brne	.-20     	; 0x982 <skip_spaces+0xa>
     996:	ce 01       	movw	r24, r28
     998:	b8 01       	movw	r22, r16
     99a:	0e 94 ae 07 	call	0xf5c	; 0xf5c <ungetc>
     99e:	ce 01       	movw	r24, r28
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	08 95       	ret

000009aa <conv_int>:
     9aa:	a0 e0       	ldi	r26, 0x00	; 0
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	eb ed       	ldi	r30, 0xDB	; 219
     9b0:	f4 e0       	ldi	r31, 0x04	; 4
     9b2:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x10>
     9b6:	ec 01       	movw	r28, r24
     9b8:	c6 2e       	mov	r12, r22
     9ba:	5a 01       	movw	r10, r20
     9bc:	12 2f       	mov	r17, r18
     9be:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     9c2:	ac 01       	movw	r20, r24
     9c4:	8b 32       	cpi	r24, 0x2B	; 43
     9c6:	19 f0       	breq	.+6      	; 0x9ce <conv_int+0x24>
     9c8:	8d 32       	cpi	r24, 0x2D	; 45
     9ca:	51 f4       	brne	.+20     	; 0x9e0 <conv_int+0x36>
     9cc:	10 68       	ori	r17, 0x80	; 128
     9ce:	ca 94       	dec	r12
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <conv_int+0x2a>
     9d2:	6d c0       	rjmp	.+218    	; 0xaae <conv_int+0x104>
     9d4:	ce 01       	movw	r24, r28
     9d6:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     9da:	ac 01       	movw	r20, r24
     9dc:	97 fd       	sbrc	r25, 7
     9de:	67 c0       	rjmp	.+206    	; 0xaae <conv_int+0x104>
     9e0:	6d ef       	ldi	r22, 0xFD	; 253
     9e2:	d6 2e       	mov	r13, r22
     9e4:	d1 22       	and	r13, r17
     9e6:	8d 2d       	mov	r24, r13
     9e8:	80 73       	andi	r24, 0x30	; 48
     9ea:	01 f5       	brne	.+64     	; 0xa2c <conv_int+0x82>
     9ec:	40 33       	cpi	r20, 0x30	; 48
     9ee:	f1 f4       	brne	.+60     	; 0xa2c <conv_int+0x82>
     9f0:	ca 94       	dec	r12
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <conv_int+0x4c>
     9f4:	47 c0       	rjmp	.+142    	; 0xa84 <conv_int+0xda>
     9f6:	ce 01       	movw	r24, r28
     9f8:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     9fc:	ac 01       	movw	r20, r24
     9fe:	97 fd       	sbrc	r25, 7
     a00:	41 c0       	rjmp	.+130    	; 0xa84 <conv_int+0xda>
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	d8 2a       	or	r13, r24
     a06:	48 37       	cpi	r20, 0x78	; 120
     a08:	11 f0       	breq	.+4      	; 0xa0e <conv_int+0x64>
     a0a:	48 35       	cpi	r20, 0x58	; 88
     a0c:	59 f4       	brne	.+22     	; 0xa24 <conv_int+0x7a>
     a0e:	80 e4       	ldi	r24, 0x40	; 64
     a10:	d8 2a       	or	r13, r24
     a12:	ca 94       	dec	r12
     a14:	b9 f1       	breq	.+110    	; 0xa84 <conv_int+0xda>
     a16:	ce 01       	movw	r24, r28
     a18:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     a1c:	ac 01       	movw	r20, r24
     a1e:	99 23       	and	r25, r25
     a20:	2c f4       	brge	.+10     	; 0xa2c <conv_int+0x82>
     a22:	30 c0       	rjmp	.+96     	; 0xa84 <conv_int+0xda>
     a24:	d6 fc       	sbrc	r13, 6
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <conv_int+0x82>
     a28:	80 e1       	ldi	r24, 0x10	; 16
     a2a:	d8 2a       	or	r13, r24
     a2c:	ee 24       	eor	r14, r14
     a2e:	ff 24       	eor	r15, r15
     a30:	87 01       	movw	r16, r14
     a32:	24 2f       	mov	r18, r20
     a34:	20 53       	subi	r18, 0x30	; 48
     a36:	28 30       	cpi	r18, 0x08	; 8
     a38:	88 f0       	brcs	.+34     	; 0xa5c <conv_int+0xb2>
     a3a:	d4 fc       	sbrc	r13, 4
     a3c:	09 c0       	rjmp	.+18     	; 0xa50 <conv_int+0xa6>
     a3e:	2a 30       	cpi	r18, 0x0A	; 10
     a40:	68 f0       	brcs	.+26     	; 0xa5c <conv_int+0xb2>
     a42:	d6 fe       	sbrs	r13, 6
     a44:	05 c0       	rjmp	.+10     	; 0xa50 <conv_int+0xa6>
     a46:	2f 7d       	andi	r18, 0xDF	; 223
     a48:	82 2f       	mov	r24, r18
     a4a:	81 51       	subi	r24, 0x11	; 17
     a4c:	86 30       	cpi	r24, 0x06	; 6
     a4e:	28 f0       	brcs	.+10     	; 0xa5a <conv_int+0xb0>
     a50:	ca 01       	movw	r24, r20
     a52:	be 01       	movw	r22, r28
     a54:	0e 94 ae 07 	call	0xf5c	; 0xf5c <ungetc>
     a58:	12 c0       	rjmp	.+36     	; 0xa7e <conv_int+0xd4>
     a5a:	27 50       	subi	r18, 0x07	; 7
     a5c:	c8 01       	movw	r24, r16
     a5e:	b7 01       	movw	r22, r14
     a60:	4d 2d       	mov	r20, r13
     a62:	0e 94 8e 04 	call	0x91c	; 0x91c <mulacc>
     a66:	7b 01       	movw	r14, r22
     a68:	8c 01       	movw	r16, r24
     a6a:	82 e0       	ldi	r24, 0x02	; 2
     a6c:	d8 2a       	or	r13, r24
     a6e:	ca 94       	dec	r12
     a70:	61 f0       	breq	.+24     	; 0xa8a <conv_int+0xe0>
     a72:	ce 01       	movw	r24, r28
     a74:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     a78:	ac 01       	movw	r20, r24
     a7a:	97 ff       	sbrs	r25, 7
     a7c:	da cf       	rjmp	.-76     	; 0xa32 <conv_int+0x88>
     a7e:	d1 fc       	sbrc	r13, 1
     a80:	04 c0       	rjmp	.+8      	; 0xa8a <conv_int+0xe0>
     a82:	15 c0       	rjmp	.+42     	; 0xaae <conv_int+0x104>
     a84:	ee 24       	eor	r14, r14
     a86:	ff 24       	eor	r15, r15
     a88:	87 01       	movw	r16, r14
     a8a:	d7 fe       	sbrs	r13, 7
     a8c:	08 c0       	rjmp	.+16     	; 0xa9e <conv_int+0xf4>
     a8e:	10 95       	com	r17
     a90:	00 95       	com	r16
     a92:	f0 94       	com	r15
     a94:	e0 94       	com	r14
     a96:	e1 1c       	adc	r14, r1
     a98:	f1 1c       	adc	r15, r1
     a9a:	01 1d       	adc	r16, r1
     a9c:	11 1d       	adc	r17, r1
     a9e:	c5 01       	movw	r24, r10
     aa0:	b8 01       	movw	r22, r16
     aa2:	a7 01       	movw	r20, r14
     aa4:	2d 2d       	mov	r18, r13
     aa6:	0e 94 82 04 	call	0x904	; 0x904 <putval>
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	01 c0       	rjmp	.+2      	; 0xab0 <conv_int+0x106>
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	cd b7       	in	r28, 0x3d	; 61
     ab2:	de b7       	in	r29, 0x3e	; 62
     ab4:	ea e0       	ldi	r30, 0x0A	; 10
     ab6:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x10>

00000aba <conv_brk>:
     aba:	a0 e2       	ldi	r26, 0x20	; 32
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	e3 e6       	ldi	r30, 0x63	; 99
     ac0:	f5 e0       	ldi	r31, 0x05	; 5
     ac2:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__prologue_saves__+0x8>
     ac6:	6c 01       	movw	r12, r24
     ac8:	a6 2e       	mov	r10, r22
     aca:	8a 01       	movw	r16, r20
     acc:	79 01       	movw	r14, r18
     ace:	fe 01       	movw	r30, r28
     ad0:	31 96       	adiw	r30, 0x01	; 1
     ad2:	80 e2       	ldi	r24, 0x20	; 32
     ad4:	df 01       	movw	r26, r30
     ad6:	1d 92       	st	X+, r1
     ad8:	8a 95       	dec	r24
     ada:	e9 f7       	brne	.-6      	; 0xad6 <conv_brk+0x1c>
     adc:	70 e0       	ldi	r23, 0x00	; 0
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	60 e0       	ldi	r22, 0x00	; 0
     ae2:	40 e0       	ldi	r20, 0x00	; 0
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	4f 01       	movw	r8, r30
     ae8:	a1 e0       	ldi	r26, 0x01	; 1
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	f6 01       	movw	r30, r12
     aee:	83 81       	ldd	r24, Z+3	; 0x03
     af0:	f7 01       	movw	r30, r14
     af2:	83 fd       	sbrc	r24, 3
     af4:	25 91       	lpm	r18, Z+
     af6:	83 ff       	sbrs	r24, 3
     af8:	21 91       	ld	r18, Z+
     afa:	7f 01       	movw	r14, r30
     afc:	22 23       	and	r18, r18
     afe:	09 f4       	brne	.+2      	; 0xb02 <conv_brk+0x48>
     b00:	7e c0       	rjmp	.+252    	; 0xbfe <conv_brk+0x144>
     b02:	2e 35       	cpi	r18, 0x5E	; 94
     b04:	19 f4       	brne	.+6      	; 0xb0c <conv_brk+0x52>
     b06:	41 15       	cp	r20, r1
     b08:	51 05       	cpc	r21, r1
     b0a:	69 f1       	breq	.+90     	; 0xb66 <conv_brk+0xac>
     b0c:	87 2f       	mov	r24, r23
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	84 17       	cp	r24, r20
     b12:	95 07       	cpc	r25, r21
     b14:	44 f4       	brge	.+16     	; 0xb26 <conv_brk+0x6c>
     b16:	2d 35       	cpi	r18, 0x5D	; 93
     b18:	51 f1       	breq	.+84     	; 0xb6e <conv_brk+0xb4>
     b1a:	2d 32       	cpi	r18, 0x2D	; 45
     b1c:	21 f4       	brne	.+8      	; 0xb26 <conv_brk+0x6c>
     b1e:	33 23       	and	r19, r19
     b20:	29 f4       	brne	.+10     	; 0xb2c <conv_brk+0x72>
     b22:	31 e0       	ldi	r19, 0x01	; 1
     b24:	21 c0       	rjmp	.+66     	; 0xb68 <conv_brk+0xae>
     b26:	33 23       	and	r19, r19
     b28:	09 f4       	brne	.+2      	; 0xb2c <conv_brk+0x72>
     b2a:	62 2f       	mov	r22, r18
     b2c:	32 2f       	mov	r19, r18
     b2e:	83 2f       	mov	r24, r19
     b30:	86 95       	lsr	r24
     b32:	86 95       	lsr	r24
     b34:	86 95       	lsr	r24
     b36:	f4 01       	movw	r30, r8
     b38:	e8 0f       	add	r30, r24
     b3a:	f1 1d       	adc	r31, r1
     b3c:	83 2f       	mov	r24, r19
     b3e:	87 70       	andi	r24, 0x07	; 7
     b40:	3d 01       	movw	r6, r26
     b42:	02 c0       	rjmp	.+4      	; 0xb48 <conv_brk+0x8e>
     b44:	66 0c       	add	r6, r6
     b46:	77 1c       	adc	r7, r7
     b48:	8a 95       	dec	r24
     b4a:	e2 f7       	brpl	.-8      	; 0xb44 <conv_brk+0x8a>
     b4c:	20 81       	ld	r18, Z
     b4e:	26 29       	or	r18, r6
     b50:	20 83       	st	Z, r18
     b52:	36 17       	cp	r19, r22
     b54:	11 f4       	brne	.+4      	; 0xb5a <conv_brk+0xa0>
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	07 c0       	rjmp	.+14     	; 0xb68 <conv_brk+0xae>
     b5a:	36 17       	cp	r19, r22
     b5c:	10 f4       	brcc	.+4      	; 0xb62 <conv_brk+0xa8>
     b5e:	3f 5f       	subi	r19, 0xFF	; 255
     b60:	e6 cf       	rjmp	.-52     	; 0xb2e <conv_brk+0x74>
     b62:	31 50       	subi	r19, 0x01	; 1
     b64:	e4 cf       	rjmp	.-56     	; 0xb2e <conv_brk+0x74>
     b66:	71 e0       	ldi	r23, 0x01	; 1
     b68:	4f 5f       	subi	r20, 0xFF	; 255
     b6a:	5f 4f       	sbci	r21, 0xFF	; 255
     b6c:	bf cf       	rjmp	.-130    	; 0xaec <conv_brk+0x32>
     b6e:	33 23       	and	r19, r19
     b70:	19 f0       	breq	.+6      	; 0xb78 <conv_brk+0xbe>
     b72:	8e 81       	ldd	r24, Y+6	; 0x06
     b74:	80 62       	ori	r24, 0x20	; 32
     b76:	8e 83       	std	Y+6, r24	; 0x06
     b78:	77 23       	and	r23, r23
     b7a:	59 f0       	breq	.+22     	; 0xb92 <conv_brk+0xd8>
     b7c:	fe 01       	movw	r30, r28
     b7e:	31 96       	adiw	r30, 0x01	; 1
     b80:	9e 01       	movw	r18, r28
     b82:	2f 5d       	subi	r18, 0xDF	; 223
     b84:	3f 4f       	sbci	r19, 0xFF	; 255
     b86:	80 81       	ld	r24, Z
     b88:	80 95       	com	r24
     b8a:	81 93       	st	Z+, r24
     b8c:	e2 17       	cp	r30, r18
     b8e:	f3 07       	cpc	r31, r19
     b90:	d1 f7       	brne	.-12     	; 0xb86 <conv_brk+0xcc>
     b92:	bb 24       	eor	r11, r11
     b94:	b3 94       	inc	r11
     b96:	4e 01       	movw	r8, r28
     b98:	08 94       	sec
     b9a:	81 1c       	adc	r8, r1
     b9c:	91 1c       	adc	r9, r1
     b9e:	c6 01       	movw	r24, r12
     ba0:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     ba4:	ac 01       	movw	r20, r24
     ba6:	97 fd       	sbrc	r25, 7
     ba8:	22 c0       	rjmp	.+68     	; 0xbee <conv_brk+0x134>
     baa:	86 95       	lsr	r24
     bac:	86 95       	lsr	r24
     bae:	86 95       	lsr	r24
     bb0:	f4 01       	movw	r30, r8
     bb2:	e8 0f       	add	r30, r24
     bb4:	f1 1d       	adc	r31, r1
     bb6:	80 81       	ld	r24, Z
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	9a 01       	movw	r18, r20
     bbc:	27 70       	andi	r18, 0x07	; 7
     bbe:	30 70       	andi	r19, 0x00	; 0
     bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <conv_brk+0x10c>
     bc2:	95 95       	asr	r25
     bc4:	87 95       	ror	r24
     bc6:	2a 95       	dec	r18
     bc8:	e2 f7       	brpl	.-8      	; 0xbc2 <conv_brk+0x108>
     bca:	80 fd       	sbrc	r24, 0
     bcc:	05 c0       	rjmp	.+10     	; 0xbd8 <conv_brk+0x11e>
     bce:	ca 01       	movw	r24, r20
     bd0:	b6 01       	movw	r22, r12
     bd2:	0e 94 ae 07 	call	0xf5c	; 0xf5c <ungetc>
     bd6:	0b c0       	rjmp	.+22     	; 0xbee <conv_brk+0x134>
     bd8:	01 15       	cp	r16, r1
     bda:	11 05       	cpc	r17, r1
     bdc:	19 f0       	breq	.+6      	; 0xbe4 <conv_brk+0x12a>
     bde:	d8 01       	movw	r26, r16
     be0:	4d 93       	st	X+, r20
     be2:	8d 01       	movw	r16, r26
     be4:	aa 94       	dec	r10
     be6:	bb 24       	eor	r11, r11
     be8:	aa 20       	and	r10, r10
     bea:	c9 f6       	brne	.-78     	; 0xb9e <conv_brk+0xe4>
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <conv_brk+0x138>
     bee:	bb 20       	and	r11, r11
     bf0:	31 f4       	brne	.+12     	; 0xbfe <conv_brk+0x144>
     bf2:	01 15       	cp	r16, r1
     bf4:	11 05       	cpc	r17, r1
     bf6:	29 f0       	breq	.+10     	; 0xc02 <conv_brk+0x148>
     bf8:	f8 01       	movw	r30, r16
     bfa:	10 82       	st	Z, r1
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <conv_brk+0x148>
     bfe:	ee 24       	eor	r14, r14
     c00:	ff 24       	eor	r15, r15
     c02:	c7 01       	movw	r24, r14
     c04:	a0 96       	adiw	r28, 0x20	; 32
     c06:	ee e0       	ldi	r30, 0x0E	; 14
     c08:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__epilogue_restores__+0x8>

00000c0c <vfscanf>:
     c0c:	a0 e0       	ldi	r26, 0x00	; 0
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	ec e0       	ldi	r30, 0x0C	; 12
     c12:	f6 e0       	ldi	r31, 0x06	; 6
     c14:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__prologue_saves__+0x8>
     c18:	5c 01       	movw	r10, r24
     c1a:	6b 01       	movw	r12, r22
     c1c:	3a 01       	movw	r6, r20
     c1e:	fc 01       	movw	r30, r24
     c20:	17 82       	std	Z+7, r1	; 0x07
     c22:	16 82       	std	Z+6, r1	; 0x06
     c24:	88 24       	eor	r8, r8
     c26:	ea c0       	rjmp	.+468    	; 0xdfc <vfscanf+0x1f0>
     c28:	81 2f       	mov	r24, r17
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 17 07 	call	0xe2e	; 0xe2e <isspace>
     c30:	89 2b       	or	r24, r25
     c32:	21 f0       	breq	.+8      	; 0xc3c <vfscanf+0x30>
     c34:	c5 01       	movw	r24, r10
     c36:	0e 94 bc 04 	call	0x978	; 0x978 <skip_spaces>
     c3a:	e0 c0       	rjmp	.+448    	; 0xdfc <vfscanf+0x1f0>
     c3c:	15 32       	cpi	r17, 0x25	; 37
     c3e:	49 f4       	brne	.+18     	; 0xc52 <vfscanf+0x46>
     c40:	f6 01       	movw	r30, r12
     c42:	f3 fc       	sbrc	r15, 3
     c44:	65 91       	lpm	r22, Z+
     c46:	f3 fe       	sbrs	r15, 3
     c48:	61 91       	ld	r22, Z+
     c4a:	6f 01       	movw	r12, r30
     c4c:	65 32       	cpi	r22, 0x25	; 37
     c4e:	69 f4       	brne	.+26     	; 0xc6a <vfscanf+0x5e>
     c50:	15 e2       	ldi	r17, 0x25	; 37
     c52:	c5 01       	movw	r24, r10
     c54:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     c58:	97 fd       	sbrc	r25, 7
     c5a:	dc c0       	rjmp	.+440    	; 0xe14 <vfscanf+0x208>
     c5c:	18 17       	cp	r17, r24
     c5e:	09 f4       	brne	.+2      	; 0xc62 <vfscanf+0x56>
     c60:	cd c0       	rjmp	.+410    	; 0xdfc <vfscanf+0x1f0>
     c62:	b5 01       	movw	r22, r10
     c64:	0e 94 ae 07 	call	0xf5c	; 0xf5c <ungetc>
     c68:	da c0       	rjmp	.+436    	; 0xe1e <vfscanf+0x212>
     c6a:	6a 32       	cpi	r22, 0x2A	; 42
     c6c:	19 f0       	breq	.+6      	; 0xc74 <vfscanf+0x68>
     c6e:	16 2f       	mov	r17, r22
     c70:	00 e0       	ldi	r16, 0x00	; 0
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfscanf+0x74>
     c74:	f3 fc       	sbrc	r15, 3
     c76:	15 91       	lpm	r17, Z+
     c78:	f3 fe       	sbrs	r15, 3
     c7a:	11 91       	ld	r17, Z+
     c7c:	6f 01       	movw	r12, r30
     c7e:	01 e0       	ldi	r16, 0x01	; 1
     c80:	99 24       	eor	r9, r9
     c82:	0f c0       	rjmp	.+30     	; 0xca2 <vfscanf+0x96>
     c84:	02 60       	ori	r16, 0x02	; 2
     c86:	69 2d       	mov	r22, r9
     c88:	70 e0       	ldi	r23, 0x00	; 0
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	40 e2       	ldi	r20, 0x20	; 32
     c90:	0e 94 8e 04 	call	0x91c	; 0x91c <mulacc>
     c94:	96 2e       	mov	r9, r22
     c96:	f6 01       	movw	r30, r12
     c98:	f3 fc       	sbrc	r15, 3
     c9a:	15 91       	lpm	r17, Z+
     c9c:	f3 fe       	sbrs	r15, 3
     c9e:	11 91       	ld	r17, Z+
     ca0:	6f 01       	movw	r12, r30
     ca2:	21 2f       	mov	r18, r17
     ca4:	20 53       	subi	r18, 0x30	; 48
     ca6:	2a 30       	cpi	r18, 0x0A	; 10
     ca8:	68 f3       	brcs	.-38     	; 0xc84 <vfscanf+0x78>
     caa:	01 fd       	sbrc	r16, 1
     cac:	03 c0       	rjmp	.+6      	; 0xcb4 <vfscanf+0xa8>
     cae:	99 24       	eor	r9, r9
     cb0:	9a 94       	dec	r9
     cb2:	03 c0       	rjmp	.+6      	; 0xcba <vfscanf+0xae>
     cb4:	99 20       	and	r9, r9
     cb6:	09 f4       	brne	.+2      	; 0xcba <vfscanf+0xae>
     cb8:	b2 c0       	rjmp	.+356    	; 0xe1e <vfscanf+0x212>
     cba:	18 36       	cpi	r17, 0x68	; 104
     cbc:	21 f0       	breq	.+8      	; 0xcc6 <vfscanf+0xba>
     cbe:	1c 36       	cpi	r17, 0x6C	; 108
     cc0:	99 f4       	brne	.+38     	; 0xce8 <vfscanf+0xdc>
     cc2:	f6 01       	movw	r30, r12
     cc4:	0b c0       	rjmp	.+22     	; 0xcdc <vfscanf+0xd0>
     cc6:	f6 01       	movw	r30, r12
     cc8:	f3 fc       	sbrc	r15, 3
     cca:	65 91       	lpm	r22, Z+
     ccc:	f3 fe       	sbrs	r15, 3
     cce:	61 91       	ld	r22, Z+
     cd0:	68 36       	cpi	r22, 0x68	; 104
     cd2:	19 f0       	breq	.+6      	; 0xcda <vfscanf+0xce>
     cd4:	6f 01       	movw	r12, r30
     cd6:	16 2f       	mov	r17, r22
     cd8:	07 c0       	rjmp	.+14     	; 0xce8 <vfscanf+0xdc>
     cda:	08 60       	ori	r16, 0x08	; 8
     cdc:	04 60       	ori	r16, 0x04	; 4
     cde:	f3 fc       	sbrc	r15, 3
     ce0:	15 91       	lpm	r17, Z+
     ce2:	f3 fe       	sbrs	r15, 3
     ce4:	11 91       	ld	r17, Z+
     ce6:	6f 01       	movw	r12, r30
     ce8:	11 23       	and	r17, r17
     cea:	09 f4       	brne	.+2      	; 0xcee <vfscanf+0xe2>
     cec:	98 c0       	rjmp	.+304    	; 0xe1e <vfscanf+0x212>
     cee:	87 e5       	ldi	r24, 0x57	; 87
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	61 2f       	mov	r22, r17
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	0e 94 1f 07 	call	0xe3e	; 0xe3e <strchr_P>
     cfa:	89 2b       	or	r24, r25
     cfc:	09 f4       	brne	.+2      	; 0xd00 <vfscanf+0xf4>
     cfe:	8f c0       	rjmp	.+286    	; 0xe1e <vfscanf+0x212>
     d00:	80 2f       	mov	r24, r16
     d02:	00 ff       	sbrs	r16, 0
     d04:	03 c0       	rjmp	.+6      	; 0xd0c <vfscanf+0x100>
     d06:	ee 24       	eor	r14, r14
     d08:	ff 24       	eor	r15, r15
     d0a:	07 c0       	rjmp	.+14     	; 0xd1a <vfscanf+0x10e>
     d0c:	f3 01       	movw	r30, r6
     d0e:	e0 80       	ld	r14, Z
     d10:	f1 80       	ldd	r15, Z+1	; 0x01
     d12:	22 e0       	ldi	r18, 0x02	; 2
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	62 0e       	add	r6, r18
     d18:	73 1e       	adc	r7, r19
     d1a:	1e 36       	cpi	r17, 0x6E	; 110
     d1c:	51 f4       	brne	.+20     	; 0xd32 <vfscanf+0x126>
     d1e:	f5 01       	movw	r30, r10
     d20:	46 81       	ldd	r20, Z+6	; 0x06
     d22:	57 81       	ldd	r21, Z+7	; 0x07
     d24:	60 e0       	ldi	r22, 0x00	; 0
     d26:	70 e0       	ldi	r23, 0x00	; 0
     d28:	c7 01       	movw	r24, r14
     d2a:	20 2f       	mov	r18, r16
     d2c:	0e 94 82 04 	call	0x904	; 0x904 <putval>
     d30:	65 c0       	rjmp	.+202    	; 0xdfc <vfscanf+0x1f0>
     d32:	13 36       	cpi	r17, 0x63	; 99
     d34:	91 f4       	brne	.+36     	; 0xd5a <vfscanf+0x14e>
     d36:	81 fd       	sbrc	r24, 1
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <vfscanf+0x132>
     d3a:	99 24       	eor	r9, r9
     d3c:	93 94       	inc	r9
     d3e:	c5 01       	movw	r24, r10
     d40:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     d44:	97 fd       	sbrc	r25, 7
     d46:	66 c0       	rjmp	.+204    	; 0xe14 <vfscanf+0x208>
     d48:	e1 14       	cp	r14, r1
     d4a:	f1 04       	cpc	r15, r1
     d4c:	19 f0       	breq	.+6      	; 0xd54 <vfscanf+0x148>
     d4e:	f7 01       	movw	r30, r14
     d50:	81 93       	st	Z+, r24
     d52:	7f 01       	movw	r14, r30
     d54:	9a 94       	dec	r9
     d56:	99 f7       	brne	.-26     	; 0xd3e <vfscanf+0x132>
     d58:	4f c0       	rjmp	.+158    	; 0xdf8 <vfscanf+0x1ec>
     d5a:	1b 35       	cpi	r17, 0x5B	; 91
     d5c:	59 f4       	brne	.+22     	; 0xd74 <vfscanf+0x168>
     d5e:	c5 01       	movw	r24, r10
     d60:	69 2d       	mov	r22, r9
     d62:	a7 01       	movw	r20, r14
     d64:	96 01       	movw	r18, r12
     d66:	0e 94 5d 05 	call	0xaba	; 0xaba <conv_brk>
     d6a:	6c 01       	movw	r12, r24
     d6c:	00 97       	sbiw	r24, 0x00	; 0
     d6e:	09 f0       	breq	.+2      	; 0xd72 <vfscanf+0x166>
     d70:	43 c0       	rjmp	.+134    	; 0xdf8 <vfscanf+0x1ec>
     d72:	3d c0       	rjmp	.+122    	; 0xdee <vfscanf+0x1e2>
     d74:	c5 01       	movw	r24, r10
     d76:	0e 94 bc 04 	call	0x978	; 0x978 <skip_spaces>
     d7a:	97 fd       	sbrc	r25, 7
     d7c:	4b c0       	rjmp	.+150    	; 0xe14 <vfscanf+0x208>
     d7e:	1f 36       	cpi	r17, 0x6F	; 111
     d80:	59 f1       	breq	.+86     	; 0xdd8 <vfscanf+0x1cc>
     d82:	10 37       	cpi	r17, 0x70	; 112
     d84:	28 f4       	brcc	.+10     	; 0xd90 <vfscanf+0x184>
     d86:	14 36       	cpi	r17, 0x64	; 100
     d88:	29 f1       	breq	.+74     	; 0xdd4 <vfscanf+0x1c8>
     d8a:	19 36       	cpi	r17, 0x69	; 105
     d8c:	39 f5       	brne	.+78     	; 0xddc <vfscanf+0x1d0>
     d8e:	27 c0       	rjmp	.+78     	; 0xdde <vfscanf+0x1d2>
     d90:	13 37       	cpi	r17, 0x73	; 115
     d92:	19 f0       	breq	.+6      	; 0xd9a <vfscanf+0x18e>
     d94:	15 37       	cpi	r17, 0x75	; 117
     d96:	11 f5       	brne	.+68     	; 0xddc <vfscanf+0x1d0>
     d98:	1d c0       	rjmp	.+58     	; 0xdd4 <vfscanf+0x1c8>
     d9a:	c5 01       	movw	r24, r10
     d9c:	0e 94 40 07 	call	0xe80	; 0xe80 <fgetc>
     da0:	ec 01       	movw	r28, r24
     da2:	97 fd       	sbrc	r25, 7
     da4:	11 c0       	rjmp	.+34     	; 0xdc8 <vfscanf+0x1bc>
     da6:	0e 94 17 07 	call	0xe2e	; 0xe2e <isspace>
     daa:	89 2b       	or	r24, r25
     dac:	29 f0       	breq	.+10     	; 0xdb8 <vfscanf+0x1ac>
     dae:	ce 01       	movw	r24, r28
     db0:	b5 01       	movw	r22, r10
     db2:	0e 94 ae 07 	call	0xf5c	; 0xf5c <ungetc>
     db6:	08 c0       	rjmp	.+16     	; 0xdc8 <vfscanf+0x1bc>
     db8:	e1 14       	cp	r14, r1
     dba:	f1 04       	cpc	r15, r1
     dbc:	19 f0       	breq	.+6      	; 0xdc4 <vfscanf+0x1b8>
     dbe:	f7 01       	movw	r30, r14
     dc0:	c1 93       	st	Z+, r28
     dc2:	7f 01       	movw	r14, r30
     dc4:	9a 94       	dec	r9
     dc6:	49 f7       	brne	.-46     	; 0xd9a <vfscanf+0x18e>
     dc8:	e1 14       	cp	r14, r1
     dca:	f1 04       	cpc	r15, r1
     dcc:	a9 f0       	breq	.+42     	; 0xdf8 <vfscanf+0x1ec>
     dce:	f7 01       	movw	r30, r14
     dd0:	10 82       	st	Z, r1
     dd2:	12 c0       	rjmp	.+36     	; 0xdf8 <vfscanf+0x1ec>
     dd4:	00 62       	ori	r16, 0x20	; 32
     dd6:	03 c0       	rjmp	.+6      	; 0xdde <vfscanf+0x1d2>
     dd8:	00 61       	ori	r16, 0x10	; 16
     dda:	01 c0       	rjmp	.+2      	; 0xdde <vfscanf+0x1d2>
     ddc:	00 64       	ori	r16, 0x40	; 64
     dde:	c5 01       	movw	r24, r10
     de0:	69 2d       	mov	r22, r9
     de2:	a7 01       	movw	r20, r14
     de4:	20 2f       	mov	r18, r16
     de6:	0e 94 d5 04 	call	0x9aa	; 0x9aa <conv_int>
     dea:	88 23       	and	r24, r24
     dec:	29 f4       	brne	.+10     	; 0xdf8 <vfscanf+0x1ec>
     dee:	f5 01       	movw	r30, r10
     df0:	83 81       	ldd	r24, Z+3	; 0x03
     df2:	80 73       	andi	r24, 0x30	; 48
     df4:	79 f4       	brne	.+30     	; 0xe14 <vfscanf+0x208>
     df6:	13 c0       	rjmp	.+38     	; 0xe1e <vfscanf+0x212>
     df8:	00 ff       	sbrs	r16, 0
     dfa:	83 94       	inc	r8
     dfc:	f5 01       	movw	r30, r10
     dfe:	f3 80       	ldd	r15, Z+3	; 0x03
     e00:	f6 01       	movw	r30, r12
     e02:	f3 fc       	sbrc	r15, 3
     e04:	15 91       	lpm	r17, Z+
     e06:	f3 fe       	sbrs	r15, 3
     e08:	11 91       	ld	r17, Z+
     e0a:	6f 01       	movw	r12, r30
     e0c:	11 23       	and	r17, r17
     e0e:	09 f0       	breq	.+2      	; 0xe12 <vfscanf+0x206>
     e10:	0b cf       	rjmp	.-490    	; 0xc28 <vfscanf+0x1c>
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <vfscanf+0x212>
     e14:	88 20       	and	r8, r8
     e16:	19 f4       	brne	.+6      	; 0xe1e <vfscanf+0x212>
     e18:	2f ef       	ldi	r18, 0xFF	; 255
     e1a:	3f ef       	ldi	r19, 0xFF	; 255
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfscanf+0x216>
     e1e:	28 2d       	mov	r18, r8
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	c9 01       	movw	r24, r18
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
     e28:	ee e0       	ldi	r30, 0x0E	; 14
     e2a:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__epilogue_restores__+0x8>

00000e2e <isspace>:
     e2e:	91 11       	cpse	r25, r1
     e30:	0d c1       	rjmp	.+538    	; 0x104c <__ctype_isfalse>
     e32:	80 32       	cpi	r24, 0x20	; 32
     e34:	19 f0       	breq	.+6      	; 0xe3c <isspace+0xe>
     e36:	89 50       	subi	r24, 0x09	; 9
     e38:	85 50       	subi	r24, 0x05	; 5
     e3a:	d0 f7       	brcc	.-12     	; 0xe30 <isspace+0x2>
     e3c:	08 95       	ret

00000e3e <strchr_P>:
     e3e:	fc 01       	movw	r30, r24
     e40:	05 90       	lpm	r0, Z+
     e42:	06 16       	cp	r0, r22
     e44:	21 f0       	breq	.+8      	; 0xe4e <strchr_P+0x10>
     e46:	00 20       	and	r0, r0
     e48:	d9 f7       	brne	.-10     	; 0xe40 <strchr_P+0x2>
     e4a:	c0 01       	movw	r24, r0
     e4c:	08 95       	ret
     e4e:	31 97       	sbiw	r30, 0x01	; 1
     e50:	cf 01       	movw	r24, r30
     e52:	08 95       	ret

00000e54 <strnlen_P>:
     e54:	fc 01       	movw	r30, r24
     e56:	05 90       	lpm	r0, Z+
     e58:	61 50       	subi	r22, 0x01	; 1
     e5a:	70 40       	sbci	r23, 0x00	; 0
     e5c:	01 10       	cpse	r0, r1
     e5e:	d8 f7       	brcc	.-10     	; 0xe56 <strnlen_P+0x2>
     e60:	80 95       	com	r24
     e62:	90 95       	com	r25
     e64:	8e 0f       	add	r24, r30
     e66:	9f 1f       	adc	r25, r31
     e68:	08 95       	ret

00000e6a <strnlen>:
     e6a:	fc 01       	movw	r30, r24
     e6c:	61 50       	subi	r22, 0x01	; 1
     e6e:	70 40       	sbci	r23, 0x00	; 0
     e70:	01 90       	ld	r0, Z+
     e72:	01 10       	cpse	r0, r1
     e74:	d8 f7       	brcc	.-10     	; 0xe6c <strnlen+0x2>
     e76:	80 95       	com	r24
     e78:	90 95       	com	r25
     e7a:	8e 0f       	add	r24, r30
     e7c:	9f 1f       	adc	r25, r31
     e7e:	08 95       	ret

00000e80 <fgetc>:
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
     e84:	ec 01       	movw	r28, r24
     e86:	4b 81       	ldd	r20, Y+3	; 0x03
     e88:	40 ff       	sbrs	r20, 0
     e8a:	1a c0       	rjmp	.+52     	; 0xec0 <fgetc+0x40>
     e8c:	46 ff       	sbrs	r20, 6
     e8e:	0a c0       	rjmp	.+20     	; 0xea4 <fgetc+0x24>
     e90:	4f 7b       	andi	r20, 0xBF	; 191
     e92:	4b 83       	std	Y+3, r20	; 0x03
     e94:	8e 81       	ldd	r24, Y+6	; 0x06
     e96:	9f 81       	ldd	r25, Y+7	; 0x07
     e98:	01 96       	adiw	r24, 0x01	; 1
     e9a:	9f 83       	std	Y+7, r25	; 0x07
     e9c:	8e 83       	std	Y+6, r24	; 0x06
     e9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ea0:	28 2f       	mov	r18, r24
     ea2:	2b c0       	rjmp	.+86     	; 0xefa <fgetc+0x7a>
     ea4:	42 ff       	sbrs	r20, 2
     ea6:	13 c0       	rjmp	.+38     	; 0xece <fgetc+0x4e>
     ea8:	e8 81       	ld	r30, Y
     eaa:	f9 81       	ldd	r31, Y+1	; 0x01
     eac:	80 81       	ld	r24, Z
     eae:	28 2f       	mov	r18, r24
     eb0:	33 27       	eor	r19, r19
     eb2:	27 fd       	sbrc	r18, 7
     eb4:	30 95       	com	r19
     eb6:	21 15       	cp	r18, r1
     eb8:	31 05       	cpc	r19, r1
     eba:	29 f4       	brne	.+10     	; 0xec6 <fgetc+0x46>
     ebc:	40 62       	ori	r20, 0x20	; 32
     ebe:	4b 83       	std	Y+3, r20	; 0x03
     ec0:	2f ef       	ldi	r18, 0xFF	; 255
     ec2:	3f ef       	ldi	r19, 0xFF	; 255
     ec4:	1b c0       	rjmp	.+54     	; 0xefc <fgetc+0x7c>
     ec6:	31 96       	adiw	r30, 0x01	; 1
     ec8:	f9 83       	std	Y+1, r31	; 0x01
     eca:	e8 83       	st	Y, r30
     ecc:	11 c0       	rjmp	.+34     	; 0xef0 <fgetc+0x70>
     ece:	ea 85       	ldd	r30, Y+10	; 0x0a
     ed0:	fb 85       	ldd	r31, Y+11	; 0x0b
     ed2:	ce 01       	movw	r24, r28
     ed4:	09 95       	icall
     ed6:	9c 01       	movw	r18, r24
     ed8:	97 ff       	sbrs	r25, 7
     eda:	0a c0       	rjmp	.+20     	; 0xef0 <fgetc+0x70>
     edc:	9b 81       	ldd	r25, Y+3	; 0x03
     ede:	2f 5f       	subi	r18, 0xFF	; 255
     ee0:	3f 4f       	sbci	r19, 0xFF	; 255
     ee2:	11 f0       	breq	.+4      	; 0xee8 <fgetc+0x68>
     ee4:	80 e2       	ldi	r24, 0x20	; 32
     ee6:	01 c0       	rjmp	.+2      	; 0xeea <fgetc+0x6a>
     ee8:	80 e1       	ldi	r24, 0x10	; 16
     eea:	89 2b       	or	r24, r25
     eec:	8b 83       	std	Y+3, r24	; 0x03
     eee:	e8 cf       	rjmp	.-48     	; 0xec0 <fgetc+0x40>
     ef0:	8e 81       	ldd	r24, Y+6	; 0x06
     ef2:	9f 81       	ldd	r25, Y+7	; 0x07
     ef4:	01 96       	adiw	r24, 0x01	; 1
     ef6:	9f 83       	std	Y+7, r25	; 0x07
     ef8:	8e 83       	std	Y+6, r24	; 0x06
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	c9 01       	movw	r24, r18
     efe:	df 91       	pop	r29
     f00:	cf 91       	pop	r28
     f02:	08 95       	ret

00000f04 <fputc>:
     f04:	0f 93       	push	r16
     f06:	1f 93       	push	r17
     f08:	cf 93       	push	r28
     f0a:	df 93       	push	r29
     f0c:	8c 01       	movw	r16, r24
     f0e:	eb 01       	movw	r28, r22
     f10:	8b 81       	ldd	r24, Y+3	; 0x03
     f12:	81 ff       	sbrs	r24, 1
     f14:	1b c0       	rjmp	.+54     	; 0xf4c <fputc+0x48>
     f16:	82 ff       	sbrs	r24, 2
     f18:	0d c0       	rjmp	.+26     	; 0xf34 <fputc+0x30>
     f1a:	2e 81       	ldd	r18, Y+6	; 0x06
     f1c:	3f 81       	ldd	r19, Y+7	; 0x07
     f1e:	8c 81       	ldd	r24, Y+4	; 0x04
     f20:	9d 81       	ldd	r25, Y+5	; 0x05
     f22:	28 17       	cp	r18, r24
     f24:	39 07       	cpc	r19, r25
     f26:	64 f4       	brge	.+24     	; 0xf40 <fputc+0x3c>
     f28:	e8 81       	ld	r30, Y
     f2a:	f9 81       	ldd	r31, Y+1	; 0x01
     f2c:	01 93       	st	Z+, r16
     f2e:	f9 83       	std	Y+1, r31	; 0x01
     f30:	e8 83       	st	Y, r30
     f32:	06 c0       	rjmp	.+12     	; 0xf40 <fputc+0x3c>
     f34:	e8 85       	ldd	r30, Y+8	; 0x08
     f36:	f9 85       	ldd	r31, Y+9	; 0x09
     f38:	80 2f       	mov	r24, r16
     f3a:	09 95       	icall
     f3c:	89 2b       	or	r24, r25
     f3e:	31 f4       	brne	.+12     	; 0xf4c <fputc+0x48>
     f40:	8e 81       	ldd	r24, Y+6	; 0x06
     f42:	9f 81       	ldd	r25, Y+7	; 0x07
     f44:	01 96       	adiw	r24, 0x01	; 1
     f46:	9f 83       	std	Y+7, r25	; 0x07
     f48:	8e 83       	std	Y+6, r24	; 0x06
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <fputc+0x4c>
     f4c:	0f ef       	ldi	r16, 0xFF	; 255
     f4e:	1f ef       	ldi	r17, 0xFF	; 255
     f50:	c8 01       	movw	r24, r16
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	1f 91       	pop	r17
     f58:	0f 91       	pop	r16
     f5a:	08 95       	ret

00000f5c <ungetc>:
     f5c:	9c 01       	movw	r18, r24
     f5e:	fb 01       	movw	r30, r22
     f60:	83 81       	ldd	r24, Z+3	; 0x03
     f62:	80 ff       	sbrs	r24, 0
     f64:	11 c0       	rjmp	.+34     	; 0xf88 <ungetc+0x2c>
     f66:	86 fd       	sbrc	r24, 6
     f68:	0f c0       	rjmp	.+30     	; 0xf88 <ungetc+0x2c>
     f6a:	9f ef       	ldi	r25, 0xFF	; 255
     f6c:	2f 3f       	cpi	r18, 0xFF	; 255
     f6e:	39 07       	cpc	r19, r25
     f70:	59 f0       	breq	.+22     	; 0xf88 <ungetc+0x2c>
     f72:	22 83       	std	Z+2, r18	; 0x02
     f74:	80 64       	ori	r24, 0x40	; 64
     f76:	8f 7d       	andi	r24, 0xDF	; 223
     f78:	83 83       	std	Z+3, r24	; 0x03
     f7a:	86 81       	ldd	r24, Z+6	; 0x06
     f7c:	97 81       	ldd	r25, Z+7	; 0x07
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	97 83       	std	Z+7, r25	; 0x07
     f82:	86 83       	std	Z+6, r24	; 0x06
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <ungetc+0x30>
     f88:	2f ef       	ldi	r18, 0xFF	; 255
     f8a:	3f ef       	ldi	r19, 0xFF	; 255
     f8c:	c9 01       	movw	r24, r18
     f8e:	08 95       	ret

00000f90 <__ultoa_invert>:
     f90:	fa 01       	movw	r30, r20
     f92:	aa 27       	eor	r26, r26
     f94:	28 30       	cpi	r18, 0x08	; 8
     f96:	51 f1       	breq	.+84     	; 0xfec <__ultoa_invert+0x5c>
     f98:	20 31       	cpi	r18, 0x10	; 16
     f9a:	81 f1       	breq	.+96     	; 0xffc <__ultoa_invert+0x6c>
     f9c:	e8 94       	clt
     f9e:	6f 93       	push	r22
     fa0:	6e 7f       	andi	r22, 0xFE	; 254
     fa2:	6e 5f       	subi	r22, 0xFE	; 254
     fa4:	7f 4f       	sbci	r23, 0xFF	; 255
     fa6:	8f 4f       	sbci	r24, 0xFF	; 255
     fa8:	9f 4f       	sbci	r25, 0xFF	; 255
     faa:	af 4f       	sbci	r26, 0xFF	; 255
     fac:	b1 e0       	ldi	r27, 0x01	; 1
     fae:	3e d0       	rcall	.+124    	; 0x102c <__ultoa_invert+0x9c>
     fb0:	b4 e0       	ldi	r27, 0x04	; 4
     fb2:	3c d0       	rcall	.+120    	; 0x102c <__ultoa_invert+0x9c>
     fb4:	67 0f       	add	r22, r23
     fb6:	78 1f       	adc	r23, r24
     fb8:	89 1f       	adc	r24, r25
     fba:	9a 1f       	adc	r25, r26
     fbc:	a1 1d       	adc	r26, r1
     fbe:	68 0f       	add	r22, r24
     fc0:	79 1f       	adc	r23, r25
     fc2:	8a 1f       	adc	r24, r26
     fc4:	91 1d       	adc	r25, r1
     fc6:	a1 1d       	adc	r26, r1
     fc8:	6a 0f       	add	r22, r26
     fca:	71 1d       	adc	r23, r1
     fcc:	81 1d       	adc	r24, r1
     fce:	91 1d       	adc	r25, r1
     fd0:	a1 1d       	adc	r26, r1
     fd2:	20 d0       	rcall	.+64     	; 0x1014 <__ultoa_invert+0x84>
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <__ultoa_invert+0x48>
     fd6:	68 94       	set
     fd8:	3f 91       	pop	r19
     fda:	2a e0       	ldi	r18, 0x0A	; 10
     fdc:	26 9f       	mul	r18, r22
     fde:	11 24       	eor	r1, r1
     fe0:	30 19       	sub	r19, r0
     fe2:	30 5d       	subi	r19, 0xD0	; 208
     fe4:	31 93       	st	Z+, r19
     fe6:	de f6       	brtc	.-74     	; 0xf9e <__ultoa_invert+0xe>
     fe8:	cf 01       	movw	r24, r30
     fea:	08 95       	ret
     fec:	46 2f       	mov	r20, r22
     fee:	47 70       	andi	r20, 0x07	; 7
     ff0:	40 5d       	subi	r20, 0xD0	; 208
     ff2:	41 93       	st	Z+, r20
     ff4:	b3 e0       	ldi	r27, 0x03	; 3
     ff6:	0f d0       	rcall	.+30     	; 0x1016 <__ultoa_invert+0x86>
     ff8:	c9 f7       	brne	.-14     	; 0xfec <__ultoa_invert+0x5c>
     ffa:	f6 cf       	rjmp	.-20     	; 0xfe8 <__ultoa_invert+0x58>
     ffc:	46 2f       	mov	r20, r22
     ffe:	4f 70       	andi	r20, 0x0F	; 15
    1000:	40 5d       	subi	r20, 0xD0	; 208
    1002:	4a 33       	cpi	r20, 0x3A	; 58
    1004:	18 f0       	brcs	.+6      	; 0x100c <__ultoa_invert+0x7c>
    1006:	49 5d       	subi	r20, 0xD9	; 217
    1008:	31 fd       	sbrc	r19, 1
    100a:	40 52       	subi	r20, 0x20	; 32
    100c:	41 93       	st	Z+, r20
    100e:	02 d0       	rcall	.+4      	; 0x1014 <__ultoa_invert+0x84>
    1010:	a9 f7       	brne	.-22     	; 0xffc <__ultoa_invert+0x6c>
    1012:	ea cf       	rjmp	.-44     	; 0xfe8 <__ultoa_invert+0x58>
    1014:	b4 e0       	ldi	r27, 0x04	; 4
    1016:	a6 95       	lsr	r26
    1018:	97 95       	ror	r25
    101a:	87 95       	ror	r24
    101c:	77 95       	ror	r23
    101e:	67 95       	ror	r22
    1020:	ba 95       	dec	r27
    1022:	c9 f7       	brne	.-14     	; 0x1016 <__ultoa_invert+0x86>
    1024:	00 97       	sbiw	r24, 0x00	; 0
    1026:	61 05       	cpc	r22, r1
    1028:	71 05       	cpc	r23, r1
    102a:	08 95       	ret
    102c:	9b 01       	movw	r18, r22
    102e:	ac 01       	movw	r20, r24
    1030:	0a 2e       	mov	r0, r26
    1032:	06 94       	lsr	r0
    1034:	57 95       	ror	r21
    1036:	47 95       	ror	r20
    1038:	37 95       	ror	r19
    103a:	27 95       	ror	r18
    103c:	ba 95       	dec	r27
    103e:	c9 f7       	brne	.-14     	; 0x1032 <__ultoa_invert+0xa2>
    1040:	62 0f       	add	r22, r18
    1042:	73 1f       	adc	r23, r19
    1044:	84 1f       	adc	r24, r20
    1046:	95 1f       	adc	r25, r21
    1048:	a0 1d       	adc	r26, r0
    104a:	08 95       	ret

0000104c <__ctype_isfalse>:
    104c:	99 27       	eor	r25, r25
    104e:	88 27       	eor	r24, r24

00001050 <__ctype_istrue>:
    1050:	08 95       	ret

00001052 <__prologue_saves__>:
    1052:	2f 92       	push	r2
    1054:	3f 92       	push	r3
    1056:	4f 92       	push	r4
    1058:	5f 92       	push	r5
    105a:	6f 92       	push	r6
    105c:	7f 92       	push	r7
    105e:	8f 92       	push	r8
    1060:	9f 92       	push	r9
    1062:	af 92       	push	r10
    1064:	bf 92       	push	r11
    1066:	cf 92       	push	r12
    1068:	df 92       	push	r13
    106a:	ef 92       	push	r14
    106c:	ff 92       	push	r15
    106e:	0f 93       	push	r16
    1070:	1f 93       	push	r17
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62
    107a:	ca 1b       	sub	r28, r26
    107c:	db 0b       	sbc	r29, r27
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	09 94       	ijmp

0000108a <__epilogue_restores__>:
    108a:	2a 88       	ldd	r2, Y+18	; 0x12
    108c:	39 88       	ldd	r3, Y+17	; 0x11
    108e:	48 88       	ldd	r4, Y+16	; 0x10
    1090:	5f 84       	ldd	r5, Y+15	; 0x0f
    1092:	6e 84       	ldd	r6, Y+14	; 0x0e
    1094:	7d 84       	ldd	r7, Y+13	; 0x0d
    1096:	8c 84       	ldd	r8, Y+12	; 0x0c
    1098:	9b 84       	ldd	r9, Y+11	; 0x0b
    109a:	aa 84       	ldd	r10, Y+10	; 0x0a
    109c:	b9 84       	ldd	r11, Y+9	; 0x09
    109e:	c8 84       	ldd	r12, Y+8	; 0x08
    10a0:	df 80       	ldd	r13, Y+7	; 0x07
    10a2:	ee 80       	ldd	r14, Y+6	; 0x06
    10a4:	fd 80       	ldd	r15, Y+5	; 0x05
    10a6:	0c 81       	ldd	r16, Y+4	; 0x04
    10a8:	1b 81       	ldd	r17, Y+3	; 0x03
    10aa:	aa 81       	ldd	r26, Y+2	; 0x02
    10ac:	b9 81       	ldd	r27, Y+1	; 0x01
    10ae:	ce 0f       	add	r28, r30
    10b0:	d1 1d       	adc	r29, r1
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	de bf       	out	0x3e, r29	; 62
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	cd bf       	out	0x3d, r28	; 61
    10bc:	ed 01       	movw	r28, r26
    10be:	08 95       	ret

000010c0 <_exit>:
    10c0:	f8 94       	cli

000010c2 <__stop_program>:
    10c2:	ff cf       	rjmp	.-2      	; 0x10c2 <__stop_program>
